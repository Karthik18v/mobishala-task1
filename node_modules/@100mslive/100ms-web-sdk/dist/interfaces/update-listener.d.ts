import HMSException from '../error/HMSException';
import HMSTrack from '../media/tracks/HMSTrack';
import HMSPeer from './hms-peer';
import HMSMessage from './message';
import HMSRoom from './room';
import HMSSpeaker from './speaker';
export declare enum HMSRoomUpdate {
    PEER_ADDED = 0,
    PEER_REMOVED = 1,
    PEER_KNOCKED = 2,
    ROOM_TYPE_CHANGED = 3,
    METADATA_UPDATED = 4,
    SCREENSHARE_STARTED = 5,
    SCREENSHARE_STOPPED = 6,
    DEFAULT_UPDATE = 7
}
export declare enum HMSPeerUpdate {
    PEER_JOINED = 0,
    PEER_LEFT = 1,
    AUDIO_TOGGLED = 2,
    VIDEO_TOGGLED = 3,
    BECAME_DOMINANT_SPEAKER = 4,
    RESIGNED_DOMINANT_SPEAKER = 5,
    STARTED_SPEAKING = 6,
    STOPPED_SPEAKING = 7
}
export declare enum HMSTrackUpdate {
    TRACK_ADDED = 0,
    TRACK_REMOVED = 1,
    TRACK_MUTED = 2,
    TRACK_UNMUTED = 3,
    TRACK_DESCRIPTION_CHANGED = 4
}
export interface HMSAudioListener {
    onAudioLevelUpdate(speakers: HMSSpeaker[]): void;
}
export default interface HMSUpdateListener {
    onJoin(room: HMSRoom): void;
    onRoomUpdate(type: HMSRoomUpdate, room: HMSRoom): void;
    onPeerUpdate(type: HMSPeerUpdate, peer: HMSPeer | null): void;
    onTrackUpdate(type: HMSTrackUpdate, track: HMSTrack, peer: HMSPeer): void;
    onMessageReceived(message: HMSMessage): void;
    onError(error: HMSException): void;
}
