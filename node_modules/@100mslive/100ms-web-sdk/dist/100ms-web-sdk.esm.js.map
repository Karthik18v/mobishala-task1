{"version":3,"file":"100ms-web-sdk.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/interfaces/hms.ts","../src/utils/logger.ts","../src/connection/index.ts","../src/connection/model.ts","../src/utils/constants.ts","../src/connection/publish/index.ts","../src/media/streams/HMSMediaStream.ts","../src/media/settings/index.ts","../src/media/streams/HMSRemoteStream.ts","../src/connection/HMSDataChannel.ts","../src/media/tracks/HMSTrack.ts","../src/media/tracks/HMSTrackType.ts","../src/media/tracks/HMSAudioTrack.ts","../src/media/tracks/HMSRemoteAudioTrack.ts","../src/media/tracks/HMSVideoTrack.ts","../src/media/tracks/HMSRemoteVideoTrack.ts","../src/connection/subscribe/index.ts","../src/signal/init/index.ts","../src/error/HMSAction.ts","../src/error/HMSErrors.ts","../src/error/HMSException.ts","../src/signal/jsonrpc/index.ts","../src/media/codec.ts","../src/media/settings/HMSAudioTrackSettings.ts","../src/error/HMSErrorFactory.ts","../src/utils/track.ts","../src/media/tracks/HMSLocalAudioTrack.ts","../src/media/settings/HMSVideoTrackSettings.ts","../src/media/tracks/HMSLocalVideoTrack.ts","../src/media/streams/HMSLocalStream.ts","../src/sdk/models/enums/HMSNotificationMethod.ts","../src/sdk/models/enums/HMSMessageType.ts","../src/sdk/models/HMSMessage.ts","../src/sdk/models/HMSSpeaker.ts","../src/sdk/models/HMSNotifications.ts","../src/transport/TransportState.ts","../src/transport/index.ts","../src/interfaces/update-listener.ts","../src/utils/jwt.ts","../src/peer/index.ts","../src/sdk/NotificationManager.ts","../src/media/settings/HMSTrackSettings.ts","../src/sdk/models/HMSRoom.ts","../src/audio-sink-manager/index.ts","../src/sdk/index.ts","../src/utils/media.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import HMSConfig from './config';\nimport HMSUpdateListener from './update-listener';\nimport HMSPeer from './hms-peer';\nimport HMSMessage from './message';\nimport { HMSLogLevel } from '../utils/logger';\n\nexport enum HMSAnalyticsLevel {\n  OFF,\n  ERROR,\n  INFO,\n  VERBOSE,\n}\n\nexport default interface HMS {\n  logLevel: HMSLogLevel;\n  analyticsLevel: HMSAnalyticsLevel;\n  join(config: HMSConfig, callback: HMSUpdateListener): void;\n  leave(): void;\n  getLocalPeer(): HMSPeer;\n  getPeers(): HMSPeer[];\n  sendMessage(type: string, message: string, receiver?: string): HMSMessage;\n  startScreenShare(onStop: () => void): void;\n  stopScreenShare(): void;\n}\n","export enum HMSLogLevel {\n  VERBOSE,\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n  NONE,\n}\n\nexport default class HMSLogger {\n  static level: HMSLogLevel = HMSLogLevel.VERBOSE;\n\n  static v(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.VERBOSE, tag, ...data);\n  }\n\n  static d(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.DEBUG, tag, ...data);\n  }\n\n  static i(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.INFO, tag, ...data);\n  }\n\n  static w(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.WARN, tag, ...data);\n  }\n\n  static e(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.ERROR, tag, ...data);\n  }\n\n  private static log(level: HMSLogLevel, tag: string, ...data: any[]) {\n    if (this.level.valueOf() > level.valueOf()) {\n      return;\n    }\n\n    switch (level) {\n      case HMSLogLevel.VERBOSE: {\n        console.log(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.DEBUG: {\n        console.debug(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.INFO: {\n        console.info(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.WARN: {\n        console.warn(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.ERROR: {\n        console.error(tag, ...data);\n        break;\n      }\n    }\n  }\n}\n","import { HMSConnectionRole } from './model';\nimport { ISignal } from '../signal/ISignal';\nimport HMSLogger from '../utils/logger';\nimport HMSTrack from '../media/tracks/HMSTrack';\n\nconst TAG = 'HMSConnection';\nexport default abstract class HMSConnection {\n  readonly role: HMSConnectionRole;\n  protected readonly signal: ISignal;\n\n  abstract readonly nativeConnection: RTCPeerConnection;\n  /**\n   * We keep a list of pending IceCandidates received\n   * from the signalling server. When the peer-connection\n   * is initialized we call [addIceCandidate] for each.\n   *\n   * WARN:\n   *  - [HMSPublishConnection] keeps the complete list of candidates (for\n   *      ice-connection failed/disconnect) forever.\n   *  - [HMSSubscribeConnection] clears this list as soon as we call [addIceCandidate]\n   */\n  readonly candidates = new Array<RTCIceCandidateInit>();\n\n  protected constructor(role: HMSConnectionRole, signal: ISignal) {\n    this.role = role;\n    this.signal = signal;\n  }\n\n  addTransceiver(track: MediaStreamTrack, init: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this.nativeConnection.addTransceiver(track, init);\n  }\n\n  async createOffer(options: RTCOfferOptions | undefined = undefined): Promise<RTCSessionDescriptionInit> {\n    try {\n      const offer = await this.nativeConnection.createOffer(options);\n      HMSLogger.d(TAG, `[role=${this.role}] createOffer offer=${JSON.stringify(offer, null, 1)}`);\n      return offer;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async createAnswer(options: RTCOfferOptions | undefined = undefined): Promise<RTCSessionDescriptionInit> {\n    const answer = await this.nativeConnection.createAnswer(options);\n    HMSLogger.d(TAG, `[role=${this.role}] createAnswer answer=${JSON.stringify(answer, null, 1)}`);\n    return answer;\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    HMSLogger.d(TAG, `[role=${this.role}] setLocalDescription description=${JSON.stringify(description, null, 1)}`);\n    await this.nativeConnection.setLocalDescription(description);\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    try {\n      HMSLogger.d(TAG, `[role=${this.role}] setRemoteDescription description=${JSON.stringify(description, null, 1)}`);\n      await this.nativeConnection.setRemoteDescription(description);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\n    HMSLogger.d(TAG, `[role=${this.role}] addIceCandidate candidate=${JSON.stringify(candidate, null, 1)}`);\n    await this.nativeConnection.addIceCandidate(candidate);\n  }\n\n  public get remoteDescription(): RTCSessionDescription | null {\n    return this.nativeConnection.remoteDescription;\n  }\n\n  getSenders(): Array<RTCRtpSender> {\n    return this.nativeConnection.getSenders();\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    this.nativeConnection.removeTrack(sender);\n  }\n\n  async setMaxBitrate(maxBitrate: number, track: HMSTrack) {\n    const sender = this.getSenders().find((s) => s?.track?.id === track.trackId);\n\n    if (sender) {\n      const params = sender.getParameters();\n      params.encodings[0].maxBitrate = maxBitrate * 1000;\n      await sender.setParameters(params);\n    }\n  }\n\n  async close() {\n    this.nativeConnection.close();\n  }\n}\n","export enum HMSConnectionRole {\n  Publish = 0,\n  Subscribe = 1,\n}\n\nexport interface HMSTrickle {\n  candidate: RTCIceCandidateInit;\n  target: HMSConnectionRole;\n}\n","export const RENEGOTIATION_CALLBACK_ID = 'renegotiation-callback-id';\nexport const API_DATA_CHANNEL = 'ion-sfu';\n","import HMSConnection from '../index';\nimport { ISignal } from '../../signal/ISignal';\nimport { IPublishConnectionObserver } from './IPublishConnectionObserver';\nimport { HMSConnectionRole } from '../model';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport HMSTrack from '../../media/tracks/HMSTrack';\nimport HMSTransport from '../../transport';\n\nconst TAG = 'HMSPublishConnection';\n\nexport default class HMSPublishConnection extends HMSConnection {\n  private readonly observer: IPublishConnectionObserver;\n  readonly nativeConnection: RTCPeerConnection;\n  private readonly transport: HMSTransport;\n\n  constructor(\n    signal: ISignal,\n    config: RTCConfiguration,\n    observer: IPublishConnectionObserver,\n    transport: HMSTransport,\n  ) {\n    super(HMSConnectionRole.Publish, signal);\n    this.observer = observer;\n    this.transport = transport;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.nativeConnection.createDataChannel(API_DATA_CHANNEL, {\n      protocol: 'SCTP',\n    });\n\n    this.nativeConnection.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        signal.trickle(this.role, candidate);\n      }\n    };\n\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n  }\n\n  initAfterJoin() {\n    this.nativeConnection.onnegotiationneeded = async () => {\n      HMSLogger.d(TAG, `onnegotiationneeded`);\n      await this.observer.onRenegotiationNeeded();\n    };\n  }\n\n  trackUpdate(track: HMSTrack) {\n    this.transport.trackUpdate(track);\n  }\n}\n","import HMSTrack from '../tracks/HMSTrack';\n\n/** @internal */\nexport default class HMSMediaStream {\n  readonly nativeStream: MediaStream;\n  readonly id: string;\n\n  readonly tracks = new Array<HMSTrack>();\n\n  constructor(nativeStream: MediaStream) {\n    this.nativeStream = nativeStream;\n    this.id = nativeStream.id;\n  }\n}\n","export enum HMSSimulcastLayer {\n  NONE = 'none',\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n}\n","import HMSSubscribeConnection from '../../connection/subscribe';\nimport HMSMediaStream from './HMSMediaStream';\nimport { HMSSimulcastLayer } from '../settings';\n\n/** @internal */\nexport default class HMSRemoteStream extends HMSMediaStream {\n  private readonly connection: HMSSubscribeConnection;\n  private audio = true;\n  private video = HMSSimulcastLayer.HIGH;\n  private frameRate = HMSSimulcastLayer.HIGH;\n\n  constructor(nativeStream: MediaStream, connection: HMSSubscribeConnection) {\n    super(nativeStream);\n    this.connection = connection;\n  }\n\n  async setAudio(enabled: boolean) {\n    this.audio = enabled;\n    await this.syncWithApiChannel();\n  }\n\n  async setVideo(layer: HMSSimulcastLayer) {\n    this.video = layer;\n    await this.syncWithApiChannel();\n  }\n\n  async syncWithApiChannel() {\n    const data = {\n      streamId: this.nativeStream.id,\n      video: this.video,\n      audio: this.audio,\n      framerate: this.frameRate,\n    };\n    await this.connection.apiChannel?.send(JSON.stringify(data));\n  }\n}\n","import HMSLogger from '../utils/logger';\n\nexport interface DataChannelObserver {\n  onMessage(value: string): void;\n}\n\nexport default class HMSDataChannel {\n  private readonly TAG = 'HMSDataChannel';\n  private readonly nativeChannel: RTCDataChannel;\n  private readonly observer: DataChannelObserver;\n  private readonly metadata: string;\n  private msgQueue: string[] = [];\n\n  public get id() {\n    return this.nativeChannel.id;\n  }\n\n  public get label() {\n    return this.nativeChannel.label;\n  }\n\n  constructor(nativeChannel: RTCDataChannel, observer: DataChannelObserver, metadata: string = '') {\n    this.nativeChannel = nativeChannel;\n    this.observer = observer;\n    this.metadata = metadata;\n\n    nativeChannel.onmessage = (e) => {\n      // HMSLogger.d(this.TAG, `[${this.metadata}] onMessage: label=${this.label}, message=${e.data}`);\n      this.observer.onMessage(e.data);\n    };\n\n    nativeChannel.onopen = () => {\n      if (this.msgQueue.length > 0) {\n        HMSLogger.d('Found pending message queue, sending messages');\n        this.msgQueue.forEach((msg) => this.send(msg));\n        this.msgQueue.length = 0;\n      }\n    };\n  }\n\n  async send(message: string) {\n    if (this.nativeChannel.readyState === 'open') {\n      HMSLogger.d(this.TAG, `[${this.metadata}] Sending [size=${message.length}] message=${message}`);\n      this.nativeChannel.send(message);\n    } else {\n      HMSLogger.d(this.TAG, 'Connection is not open, queueing', message);\n      this.msgQueue.push(message);\n    }\n  }\n\n  close() {\n    this.nativeChannel.close();\n  }\n}\n","import HMSMediaStream from '../streams/HMSMediaStream';\nimport { HMSTrackType } from './HMSTrackType';\n\nexport type HMSTrackSource = 'regular' | 'screen' | 'plugin';\n\nexport default abstract class HMSTrack {\n  // @internal\n  readonly stream: HMSMediaStream;\n  source?: HMSTrackSource;\n\n  /** Changes only when un-muting the local track\n   * i.e replacing the nativeTrack with different `deviceId`\n   * track.\n   * @internal */\n  nativeTrack: MediaStreamTrack;\n\n  abstract readonly type: HMSTrackType;\n\n  public get enabled(): boolean {\n    return this.nativeTrack.enabled;\n  }\n\n  public get trackId(): string {\n    return this.nativeTrack.id;\n  }\n\n  getMediaTrackSettings(): MediaTrackSettings {\n    return this.nativeTrack.getSettings();\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    this.nativeTrack.enabled = value;\n  }\n\n  protected constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: HMSTrackSource) {\n    this.stream = stream;\n    this.nativeTrack = track;\n    this.source = source;\n  }\n}\n","export enum HMSTrackType {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n}\n","import HMSTrack, { HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport HMSMediaStream from '../streams/HMSMediaStream';\n\nexport default class HMSAudioTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.AUDIO;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'audio') throw new Error(\"Expected 'track' kind = 'audio'\");\n  }\n}\n","import HMSAudioTrack from './HMSAudioTrack';\nimport HMSRemoteStream from '../streams/HMSRemoteStream';\n\nexport default class HMSRemoteAudioTrack extends HMSAudioTrack {\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) return;\n    await super.setEnabled(value);\n    await (this.stream as HMSRemoteStream).setAudio(value);\n  }\n}\n","import HMSTrack, { HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport HMSMediaStream from '../streams/HMSMediaStream';\n\nexport default class HMSVideoTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.VIDEO;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'video') throw new Error(\"Expected 'track' kind = 'video'\");\n  }\n\n  addSink(videoElement: HTMLVideoElement) {\n    videoElement.srcObject = new MediaStream([this.nativeTrack]);\n  }\n\n  removeSink(videoElement: HTMLVideoElement) {\n    videoElement.srcObject = null;\n  }\n}\n","import HMSVideoTrack from './HMSVideoTrack';\nimport HMSRemoteStream from '../streams/HMSRemoteStream';\nimport { HMSSimulcastLayer } from '../settings';\n\nexport default class HMSRemoteVideoTrack extends HMSVideoTrack {\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) return;\n    await super.setEnabled(value);\n    const layer = value ? HMSSimulcastLayer.HIGH : HMSSimulcastLayer.NONE;\n    await this.preferLayer(layer);\n  }\n\n  async preferLayer(layer: HMSSimulcastLayer) {\n    await (this.stream as HMSRemoteStream).setVideo(layer);\n  }\n\n  async addSink(videoElement: HTMLVideoElement) {\n    await this.preferLayer(HMSSimulcastLayer.HIGH);\n    super.addSink(videoElement);\n  }\n\n  async removeSink(videoElement: HTMLVideoElement) {\n    await this.preferLayer(HMSSimulcastLayer.NONE);\n    super.removeSink(videoElement);\n  }\n}\n","import HMSConnection from '../index';\nimport { ISignal } from '../../signal/ISignal';\nimport ISubscribeConnectionObserver from './ISubscribeConnectionObserver';\nimport { HMSConnectionRole } from '../model';\nimport HMSRemoteStream from '../../media/streams/HMSRemoteStream';\nimport HMSDataChannel from '../HMSDataChannel';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSRemoteAudioTrack from '../../media/tracks/HMSRemoteAudioTrack';\nimport HMSRemoteVideoTrack from '../../media/tracks/HMSRemoteVideoTrack';\n\nexport default class HMSSubscribeConnection extends HMSConnection {\n  private readonly remoteStreams = new Map<string, HMSRemoteStream>();\n\n  private readonly observer: ISubscribeConnectionObserver;\n  readonly nativeConnection: RTCPeerConnection;\n\n  private _apiChannel: HMSDataChannel | null = null;\n\n  public get apiChannel(): HMSDataChannel {\n    // TODO: Wait for the channel to be open;\n    return this._apiChannel!;\n  }\n\n  private initNativeConnectionCallbacks() {\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n\n    this.nativeConnection.ondatachannel = (e) => {\n      if (e.channel.label !== API_DATA_CHANNEL) {\n        // TODO: this.observer.onDataChannel(e.channel);\n        return;\n      }\n\n      this._apiChannel = new HMSDataChannel(\n        e.channel,\n        {\n          onMessage: (value: string) => {\n            this.observer.onApiChannelMessage(value);\n          },\n        },\n        `role=${this.role}`,\n      );\n    };\n\n    this.nativeConnection.onicecandidate = (e) => {\n      if (e.candidate !== null) {\n        this.signal.trickle(this.role, e.candidate);\n      }\n    };\n\n    this.nativeConnection.ontrack = (e) => {\n      const stream = e.streams[0];\n      if (!this.remoteStreams.has(stream.id)) {\n        const remote = new HMSRemoteStream(stream, this);\n        this.remoteStreams.set(stream.id, remote);\n\n        stream.onremovetrack = (e) => {\n          const toRemoveTrackIdx = remote.tracks.findIndex((track) => track.trackId === e.track.id);\n          if (toRemoveTrackIdx >= 0) {\n            const toRemoveTrack = remote.tracks[toRemoveTrackIdx];\n            this.observer.onTrackRemove(toRemoveTrack);\n            remote.tracks.splice(toRemoveTrackIdx, 1);\n\n            // If the length becomes 0 we assume that stream is removed entirely\n            if (remote.tracks.length === 0) {\n              this.remoteStreams.delete(stream.id);\n            }\n          }\n        };\n      }\n\n      const remote = this.remoteStreams.get(stream.id)!;\n      const TrackCls = e.track.kind === 'audio' ? HMSRemoteAudioTrack : HMSRemoteVideoTrack;\n      const track = new TrackCls(remote, e.track);\n      remote.tracks.push(track);\n      this.observer.onTrackAdd(track);\n    };\n  }\n\n  constructor(signal: ISignal, config: RTCConfiguration, observer: ISubscribeConnectionObserver) {\n    super(HMSConnectionRole.Subscribe, signal);\n    this.observer = observer;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.initNativeConnectionCallbacks();\n  }\n\n  async close() {\n    await super.close();\n    this.apiChannel?.close();\n  }\n}\n","import { InitConfig } from './models';\nimport HMSLogger from '../../utils/logger';\n\nconst TAG = 'InitService';\n\nexport default class InitService {\n  static async fetchInitConfig(\n    token: string,\n    initEndpoint: string = 'https://qa-init.100ms.live/init',\n    region: string = '',\n  ): Promise<InitConfig> {\n    HMSLogger.d(TAG, `fetchInitConfig: initEndpoint=${initEndpoint} token=${token} region=${region}`);\n    let url = `${initEndpoint}?token=${token}`;\n    if (region.length > 0) {\n      url += `&region=${region}`;\n    }\n\n    // @TODO: Add user-agent, handle error status codes\n    const response = await fetch(url);\n    return (await response.json()) as InitConfig;\n  }\n}\n","export enum HMSAction {\n  SwitchDevice,\n  GetLocalStream,\n  GetLocalScreen,\n  GetLocalDevices,\n  Join,\n  Publish,\n  Subscribe,\n  Unsubscribe,\n  Unpublish,\n  Failure,\n  Leave,\n  None,\n}\n","/*\n * HMSErrors.ts\n *\n * Created by codegen\n * Copyright © 2021 100ms. All rights reserved.\n */\n\nexport interface CodeMessage {\n  code: number;\n  messageTemplate: string;\n  requiresAction: boolean;\n  requiresErrorInfo: boolean;\n}\n\nconst HMSErrors = {\n  /* Connection Errors */\n\n  // Generic error\n  GenericConnect: {\n    code: 1000,\n    messageTemplate: `Something went wrong`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Auth token is missing\n  MissingToken: {\n    code: 1001,\n    messageTemplate: `Auth token is missing`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Token is not in proper JWT format\n  InvalidTokenFormat: {\n    code: 1002,\n    messageTemplate: `This auth token format is not supported`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Token is missing room id parameter\n  TokenMissingRoomId: {\n    code: 1003,\n    messageTemplate: `Auth token is missing room id field`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // SDK cannot establish websocket connection\n  NetworkUnavailable: {\n    code: 1004,\n    messageTemplate: `Could not connect. Please check your internet connection and try again`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Token is not authorised/expired\n  TokenNotAuthorised: {\n    code: 1005,\n    messageTemplate: `Auth token is not valid`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Endpoint url is malformed\n  InvalidEndpointUrl: {\n    code: 1006,\n    messageTemplate: `Endpoint URL is invalid`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Endpoint is not responding\n  EndpointUnreachable: {\n    code: 1007,\n    messageTemplate: `Endpoint is not reachable`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Signalling websocket connection failed / RTC Peer connection failed\n  ConnectionLost: {\n    code: 1008,\n    messageTemplate: `Connection to server is lost. {error_info}`,\n    requiresAction: false,\n    requiresErrorInfo: true,\n  },\n  /* Local Stream Errors */\n\n  // Generic error\n  GenericStream: {\n    code: 2000,\n    messageTemplate: `Something went wrong`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Both publish audio/video is off nothing to return\n  NothingToReturn: {\n    code: 2001,\n    messageTemplate: `There is no media to return. Please select either video or audio or both`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Trying to change codec on the fly\n  CodecChangeNotPermitted: {\n    code: 2002,\n    messageTemplate: `Codec can't be changed mid call`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Trying to change publish video/audio mid call\n  PublishSettingsCantBeChanged: {\n    code: 2003,\n    messageTemplate: `Publish options can't be changed mid call`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // User denied permission to access capture device\n  CantAccessCaptureDevice: {\n    code: 2004,\n    messageTemplate: `No permission to access capture device`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // WEB: Capture device is no longer available (usb cam is not connected)\n  DeviceNotAvailable: {\n    code: 2005,\n    messageTemplate: `Capture device is no longer available`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // WEB: Capture device is in use by another application\n  DeviceInUse: {\n    code: 2006,\n    messageTemplate: `Capture device is in use by another application`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  /* Room Join/Leave Errors */\n\n  // Generic error\n  GenericJoin: {\n    code: 3000,\n    messageTemplate: `Something went wrong`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Unknown room id\n  UnkownRoom: {\n    code: 3001,\n    messageTemplate: `This room id is not recongnised.`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Already joined\n  AlreadyJoined: {\n    code: 3002,\n    messageTemplate: `You have already joined this room.`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Max room participants reached\n  RoomParticipantLimitReached: {\n    code: 3004,\n    messageTemplate: `You can't join this room because it is already full.`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  /* Room Actions Errors */\n\n  // Generic error\n  GenericAction: {\n    code: 4100,\n    messageTemplate: `[{action}]: Something went wrong`,\n    requiresAction: true,\n    requiresErrorInfo: false,\n  },\n  // Has not joined the room\n  NotInTheRoom: {\n    code: 4101,\n    messageTemplate: `[{action}]: You need to join the room before you can publish.`,\n    requiresAction: true,\n    requiresErrorInfo: false,\n  },\n  // Malformed server response (i.e sdp missing)\n  InvalidServerResponse: {\n    code: 4102,\n    messageTemplate: `[{action}]: Unknown server response. {error_info} `,\n    requiresAction: true,\n    requiresErrorInfo: true,\n  },\n  // Failed to establish RTCPeerConnection\n  PeerConnectionFailed: {\n    code: 4103,\n    messageTemplate: `[{action}]: Could not establish a peer connection. {error_info} `,\n    requiresAction: true,\n    requiresErrorInfo: true,\n  },\n  // Can't unpublish a stream that is not published\n  UnpublishCalledBeforePublish: {\n    code: 4104,\n    messageTemplate: `Can't unpublish a stream that is not published`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  /* Generic Errors */\n\n  // Not connected\n  NotConnected: {\n    code: 5000,\n    messageTemplate: `Client is not connected`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n  // Generic signalling error. I.e server is returning error response to some command but the SDK doesn't know how to handle.\n  Signalling: {\n    code: 5001,\n    messageTemplate: `Unknown signalling error: {action} {error_info} `,\n    requiresAction: true,\n    requiresErrorInfo: true,\n  },\n  // Generic SDK error. Some unforseen exception happened.\n  Unknown: {\n    code: 5002,\n    messageTemplate: `Unknown exception: {error_info}`,\n    requiresAction: false,\n    requiresErrorInfo: true,\n  },\n  // Webrtc stack not initialised yet\n  NotReady: {\n    code: 5003,\n    messageTemplate: `WebRTC engine is not ready yet`,\n    requiresAction: false,\n    requiresErrorInfo: false,\n  },\n};\n\nexport default HMSErrors;\n","import { HMSAction } from './HMSAction';\nimport HMSErrors, { CodeMessage } from './HMSErrors';\n\nexport class HMSExceptionBuilder {\n  private readonly cm: CodeMessage;\n  private _action: string | null = null;\n  private _errorInfo: string | null = null;\n\n  constructor(codeMessage: CodeMessage) {\n    this.cm = codeMessage;\n  }\n\n  action(action: HMSAction) {\n    this._action = HMSAction[action].toString();\n    return this;\n  }\n\n  errorInfo(errorInfo: string) {\n    this._errorInfo = errorInfo;\n    return this;\n  }\n\n  static from(code: number, message: string, requiresAction: boolean = false, requiresErrorInfo: boolean = false) {\n    const cm = {\n      code,\n      messageTemplate: message,\n      requiresAction,\n      requiresErrorInfo,\n    };\n    if (!message.includes('{action}') && requiresAction) {\n      cm.messageTemplate = `[{action}] ${cm.messageTemplate}`;\n    }\n\n    if (!message.includes('{error_info}') && requiresAction) {\n      cm.messageTemplate = `${cm.messageTemplate}. {error_info}`;\n    }\n\n    return new HMSExceptionBuilder(cm);\n  }\n\n  build(): HMSException {\n    const { code, requiresAction, requiresErrorInfo } = this.cm;\n    const hmsErrorEntry = Object.entries(HMSErrors).find((errorEntry) => errorEntry[1].code === code);\n    const title = (hmsErrorEntry && hmsErrorEntry[0]) || '';\n    let message = this.cm.messageTemplate;\n    if (requiresAction && this._action === null) {\n      throw Error(`${code}: ${message} requires action property`);\n    } else if (requiresAction) {\n      message = message.replace('{action}', this._action!);\n    } else if (this._action !== null) {\n      message = `[${this._action}] ${message}`;\n    }\n\n    if (requiresErrorInfo && this._errorInfo === null) {\n      throw Error(`${code}: ${message} requires errorInfo property`);\n    } else if (requiresErrorInfo) {\n      message = message.replace('{error_info}', this._errorInfo!);\n    } else if (this._errorInfo !== null) {\n      message = `${message}. ${this._errorInfo}`;\n    }\n\n    return new HMSException(this.cm.code, title, message);\n  }\n}\n\nexport default class HMSException extends Error {\n  readonly code: number;\n  readonly title: string = '';\n\n  constructor(code: number, title: string, message: string) {\n    super(message);\n\n    // Ref: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, HMSException.prototype);\n    this.name = 'HMSException';\n    this.title = title;\n    this.code = code;\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport { ISignal, Track } from '../ISignal';\nimport { ISignalEventsObserver } from '../ISignalEventsObserver';\nimport { HMSConnectionRole, HMSTrickle } from '../../connection/model';\nimport { JsonRpcRequest } from './models';\nimport { HMSExceptionBuilder } from '../../error/HMSException';\nimport { PromiseCallbacks } from '../../utils/promise';\nimport HMSLogger from '../../utils/logger';\nimport HMSErrors from '../../error/HMSErrors';\nimport HMSMessage from '../../interfaces/message';\n\nexport default class JsonRpcSignal implements ISignal {\n  private readonly TAG = '[ SIGNAL ]: ';\n  readonly observer: ISignalEventsObserver;\n\n  /**\n   * Sometimes before [join] is completed, there could be a lot of trickles\n   * Sending [HMSTrickle]` before [join] web socket message leads to\n   * error: [500] no rtc transport exists for this Peer\n   *\n   * We keep a list of pending trickles and send them immediately after [join]\n   * is done.\n   */\n  private isJoinCompleted: boolean = false;\n  private pendingTrickle: Array<HMSTrickle> = [];\n\n  private socket: WebSocket | null = null;\n\n  private callbacks = new Map<string, PromiseCallbacks<string>>();\n\n  constructor(observer: ISignalEventsObserver) {\n    this.observer = observer;\n  }\n\n  private async call<T>(method: string, params: any): Promise<T> {\n    const id = uuid();\n    const message = { method, params, id } as JsonRpcRequest;\n\n    this.socket!.send(JSON.stringify(message));\n\n    const response = await new Promise<string>((resolve, reject) => {\n      this.callbacks.set(id, { resolve, reject });\n    });\n\n    return JSON.parse(response);\n  }\n\n  private notify(method: string, params: any) {\n    const message = { method, params };\n\n    this.socket!.send(JSON.stringify(message));\n  }\n\n  open(uri: string): Promise<void> {\n    return new Promise((resolve) => {\n      this.socket = new WebSocket(uri); // @DISCUSS: Inject WebSocket as a dependency so that it can be easier to mock and test\n      const openHandler = () => {\n        resolve();\n        this.socket!.removeEventListener('open', openHandler);\n      };\n\n      this.socket.addEventListener('open', openHandler);\n      this.socket.addEventListener('close', (e) => {\n        // https://stackoverflow.com/questions/18803971/websocket-onerror-how-to-read-error-description\n        if (e.code !== 1000) {\n          // 1000 code indicated `Normal Closure` [https://tools.ietf.org/html/rfc6455#section-7.4.1]\n          const error = new HMSExceptionBuilder(HMSErrors.ConnectionLost).errorInfo(`${e.reason} [${e.code}]`).build();\n          this.observer.onFailure(error);\n        }\n      });\n      this.socket.addEventListener('message', (event) => this.onMessageHandler(event.data));\n    });\n  }\n\n  async close(): Promise<void> {\n    const p = new Promise<void>((resolve) => {\n      this.socket!.addEventListener('close', () => resolve());\n    });\n\n    // For `1000` Refer: https://tools.ietf.org/html/rfc6455#section-7.4.1\n    this.socket!.close(1000, 'Normal Close');\n    return p;\n  }\n\n  async join(\n    name: string,\n    data: string,\n    offer: RTCSessionDescriptionInit,\n    disableVidAutoSub: boolean,\n  ): Promise<RTCSessionDescriptionInit> {\n    const params = { name, disableVidAutoSub, data, offer };\n    const response: RTCSessionDescriptionInit = await this.call('join', params);\n\n    this.isJoinCompleted = true;\n    this.pendingTrickle.forEach(({ target, candidate }) => this.trickle(target, candidate));\n    this.pendingTrickle.length = 0;\n\n    HMSLogger.d(this.TAG, `join: response=${JSON.stringify(response, null, 1)}`);\n    return response;\n  }\n\n  trickle(target: HMSConnectionRole, candidate: RTCIceCandidateInit) {\n    if (this.isJoinCompleted) {\n      this.notify('trickle', { target, candidate });\n    } else {\n      this.pendingTrickle.push({ target, candidate });\n    }\n  }\n\n  async offer(desc: RTCSessionDescriptionInit, tracks: Map<string, any>): Promise<RTCSessionDescriptionInit> {\n    const response = await this.call('offer', {\n      desc,\n      tracks: Object.fromEntries(tracks),\n    });\n    return response as RTCSessionDescriptionInit;\n  }\n\n  answer(desc: RTCSessionDescriptionInit) {\n    this.notify('answer', { desc });\n  }\n\n  trackUpdate(tracks: Map<string, Track>) {\n    HMSLogger.d(this.TAG, 'Track Update: ', { tracks: Object.fromEntries(tracks) });\n    this.notify('track-update', { version: '1.0', tracks: Object.fromEntries(tracks) });\n  }\n\n  broadcast(message: HMSMessage) {\n    // Refer https://www.notion.so/100ms/Biz-Client-Communication-V2-0e93bf0fcd0d46d49e96099d498112d8#b6dd01c8e258442fb50c11c87e4581fb\n    this.notify('broadcast', { version: '1.0', info: message });\n  }\n\n  recordStart() {}\n\n  recordEnd() {}\n\n  leave() {\n    this.notify('leave', { version: '1.0' });\n  }\n\n  analytics() {}\n\n  private onMessageHandler(text: string) {\n    const response = JSON.parse(text);\n\n    if (response.hasOwnProperty('id')) {\n      /** This is a response to [call] */\n      const id: string = response.id;\n      if (this.callbacks.has(id)) {\n        const cb = this.callbacks.get(id)!;\n        this.callbacks.delete(id);\n        if (response.result) {\n          cb.resolve(JSON.stringify(response.result));\n        } else {\n          const error = response.error;\n          const ex = HMSExceptionBuilder.from(error.code, error.message).build();\n          cb.reject(ex);\n        }\n      } else {\n        this.observer.onNotification(response);\n      }\n    } else if (response.hasOwnProperty('method')) {\n      if (response.method === 'offer') {\n        this.observer.onOffer(response.params);\n      } else if (response.method === 'trickle') {\n        this.observer.onTrickle(response.params);\n      } else {\n        this.observer.onNotification(response);\n      }\n    } else throw Error(`WebSocket message has no 'method' or 'id' field, message=${response}`);\n  }\n}\n","export enum HMSVideoCodec {\n  VP8 = 'vp8',\n  VP9 = 'vp9',\n  H264 = 'h264',\n}\n\nexport enum HMSAudioCodec {\n  OPUS = 'opus',\n}\n","import { HMSAudioCodec } from '../codec';\n\nexport class HMSAudioTrackSettingsBuilder {\n  private _volume: number = 1.0;\n  private _codec: HMSAudioCodec = HMSAudioCodec.OPUS;\n  private _maxBitrate: number = 32_000;\n  private _deviceId: string = 'default';\n  private _advanced: Array<MediaTrackConstraintSet> = [\n    // @ts-ignore\n    { googEchoCancellation: { exact: true } },\n    // @ts-ignore\n    { googExperimentalEchoCancellation: { exact: true } },\n    { autoGainControl: { exact: true } },\n    { noiseSuppression: { exact: true } },\n    // @ts-ignore\n    { googHighpassFilter: { exact: true } },\n    // @ts-ignore\n    { googAudioMirroring: { exact: true } },\n  ];\n\n  volume(volume: number) {\n    if (!(0.0 <= volume && volume <= 1.0)) throw Error('volume can only be in range [0.0, 1.0]');\n    this._volume = volume;\n    return this;\n  }\n\n  codec(codec: HMSAudioCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxBitrate(maxBitrate: number) {\n    if (maxBitrate <= 0) throw Error('maxBitrate should be >= 1');\n    this._maxBitrate = maxBitrate;\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  build() {\n    return new HMSAudioTrackSettings(this._volume, this._codec, this._maxBitrate, this._deviceId, this._advanced);\n  }\n}\n\nexport default class HMSAudioTrackSettings {\n  readonly volume: number;\n  readonly codec: HMSAudioCodec;\n  readonly maxBitrate: number;\n  readonly deviceId: string;\n  readonly advanced: Array<MediaTrackConstraintSet>;\n\n  constructor(\n    volume: number,\n    codec: HMSAudioCodec,\n    maxBitrate: number,\n    deviceId: string,\n    advanced: Array<MediaTrackConstraintSet>,\n  ) {\n    this.volume = volume;\n    this.codec = codec;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n  }\n\n  toConstraints(): MediaTrackConstraints {\n    return {\n      deviceId: this.deviceId,\n      advanced: this.advanced,\n    };\n  }\n}\n","import HMSLogger from '../utils/logger';\nimport { HMSAction } from './HMSAction';\nimport HMSErrors from './HMSErrors';\nimport HMSException, { HMSExceptionBuilder } from './HMSException';\n\nconst TAG = 'HMSErrorFactory';\n\nexport function BuildGetMediaError(err: Error, action: HMSAction): HMSException {\n  HMSLogger.e(TAG, `getLocalScreen`, err);\n  const message = err.message.toLowerCase();\n\n  switch (err.name) {\n    case 'OverconstrainedError':\n      return new HMSExceptionBuilder(HMSErrors.Unknown).action(action).errorInfo(err.message).build();\n    case 'NotAllowedError':\n      return new HMSExceptionBuilder(HMSErrors.CantAccessCaptureDevice).action(action).errorInfo(err.message).build();\n    case 'NotFoundError':\n      return new HMSExceptionBuilder(HMSErrors.DeviceNotAvailable).action(action).errorInfo(err.message).build();\n    case 'NotReadableError':\n      return new HMSExceptionBuilder(HMSErrors.DeviceInUse).action(action).errorInfo(err.message).build();\n    case 'TypeError':\n      return new HMSExceptionBuilder(HMSErrors.NothingToReturn).action(action).errorInfo(err.message).build();\n    default:\n      if (message.includes('device not found')) {\n        return new HMSExceptionBuilder(HMSErrors.DeviceNotAvailable).action(action).errorInfo(err.message).build();\n      } else if (message.includes('permission denied')) {\n        return new HMSExceptionBuilder(HMSErrors.CantAccessCaptureDevice).action(action).errorInfo(err.message).build();\n      } else {\n        return new HMSExceptionBuilder(HMSErrors.Unknown).action(action).errorInfo(err.message).build();\n      }\n  }\n}\n","import { HMSAction } from '../error/HMSAction';\nimport { BuildGetMediaError } from '../error/HMSErrorFactory';\nimport HMSAudioTrackSettings from '../media/settings/HMSAudioTrackSettings';\nimport HMSVideoTrackSettings from '../media/settings/HMSVideoTrackSettings';\n\nexport async function getAudioTrack(settings: HMSAudioTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: settings.toConstraints(),\n    });\n    return stream.getAudioTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err, HMSAction.SwitchDevice);\n  }\n}\n\nexport async function getVideoTrack(settings: HMSVideoTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: settings.toConstraints(),\n    });\n    return stream.getVideoTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err, HMSAction.SwitchDevice);\n  }\n}\n\n// the dimensions of the passed in track are used to create the empty video track\nexport function getEmptyVideoTrack(prevTrack?: MediaStreamTrack) {\n  const width = prevTrack?.getSettings()?.width || 640;\n  const height = prevTrack?.getSettings()?.height || 360;\n  const canvas = Object.assign(document.createElement('canvas'), { width, height }) as any;\n  canvas.getContext('2d')?.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  const emptyTrack = stream.getVideoTracks()[0];\n  emptyTrack.enabled = false;\n  return emptyTrack;\n}\n","import HMSAudioTrack from './HMSAudioTrack';\nimport HMSLocalStream from '../streams/HMSLocalStream';\nimport HMSAudioTrackSettings from '../settings/HMSAudioTrackSettings';\nimport { getAudioTrack } from '../../utils/track';\n\nfunction generateHasPropertyChanged(newSettings: HMSAudioTrackSettings, oldSettings: HMSAudioTrackSettings) {\n  return function hasChanged(prop: 'codec' | 'volume' | 'maxBitrate' | 'deviceId' | 'advanced') {\n    return prop in newSettings && newSettings[prop] !== oldSettings[prop];\n  };\n}\n\nexport default class HMSLocalAudioTrack extends HMSAudioTrack {\n  settings: HMSAudioTrackSettings;\n\n  constructor(stream: HMSLocalStream, track: MediaStreamTrack, settings: HMSAudioTrackSettings, source: string) {\n    super(stream, track, source);\n    stream.tracks.push(this);\n\n    this.settings = settings;\n  }\n\n  private async replaceTrackWith(settings: HMSAudioTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    const withTrack = await getAudioTrack(settings);\n    await (this.stream as HMSLocalStream).replaceTrack(this, withTrack);\n    prevTrack?.stop();\n  }\n\n  async setEnabled(value: boolean) {\n    if (value === this.enabled) return;\n    await super.setEnabled(value);\n    (this.stream as HMSLocalStream).trackUpdate(this);\n  }\n\n  async setSettings(settings: HMSAudioTrackSettings) {\n    const { volume, codec, maxBitrate, deviceId, advanced } = { ...this.settings, ...settings };\n    const newSettings = new HMSAudioTrackSettings(volume, codec, maxBitrate, deviceId, advanced);\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n\n    if (hasPropertyChanged('deviceId')) {\n      await this.replaceTrackWith(newSettings);\n    }\n\n    if (hasPropertyChanged('maxBitrate')) {\n      await stream.setMaxBitrate(newSettings.maxBitrate, this);\n    }\n\n    if (hasPropertyChanged('advanced')) {\n      await this.nativeTrack.applyConstraints(newSettings.toConstraints());\n    }\n\n    this.settings = newSettings;\n  }\n}\n","import { HMSVideoCodec } from '../codec';\n\nexport class HMSVideoResolution {\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number, height: number) {\n    if (width <= 0) throw Error('Height should be >= 1');\n    if (height <= 0) throw Error('Height should be >= 1');\n\n    this.width = width;\n    this.height = height;\n  }\n}\n\nexport class HMSVideoTrackSettingsBuilder {\n  private _width: number = 320;\n  private _height: number = 180;\n  private _codec: HMSVideoCodec = HMSVideoCodec.VP8;\n  private _maxFramerate: number = 30;\n  private _maxBitrate: number = 150_000;\n  private _deviceId: string = 'default';\n  private _advanced: Array<MediaTrackConstraintSet> = [];\n\n  setWidth(width: number) {\n    this._width = width;\n    return this;\n  }\n\n  setHeight(height: number) {\n    this._height = height;\n    return this;\n  }\n\n  codec(codec: HMSVideoCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxFramerate(maxFramerate: number) {\n    if (maxFramerate <= 0) throw Error('maxFramerate should be >= 1');\n    this._maxFramerate = maxFramerate;\n    return this;\n  }\n\n  maxBitrate(maxBitrate: number) {\n    if (maxBitrate <= 0) throw Error('maxBitrate should be >= 1');\n    this._maxBitrate = maxBitrate;\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  build() {\n    return new HMSVideoTrackSettings(\n      this._width,\n      this._height,\n      this._codec,\n      this._maxFramerate,\n      this._maxBitrate,\n      this._deviceId,\n      this._advanced,\n    );\n  }\n}\n\nexport default class HMSVideoTrackSettings {\n  readonly width: number;\n  readonly height: number;\n  readonly codec: HMSVideoCodec;\n  readonly maxFramerate: number;\n  readonly maxBitrate: number;\n  readonly deviceId: string;\n  readonly advanced: Array<MediaTrackConstraintSet>;\n\n  constructor(\n    width: number,\n    height: number,\n    codec: HMSVideoCodec,\n    maxFramerate: number,\n    maxBitrate: number,\n    deviceId: string,\n    advanced: Array<MediaTrackConstraintSet>,\n  ) {\n    this.width = width;\n    this.height = height;\n    this.codec = codec;\n    this.maxFramerate = maxFramerate;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n  }\n\n  toConstraints(): MediaTrackConstraints {\n    return {\n      width: this.width,\n      height: this.height,\n      frameRate: this.maxFramerate,\n      deviceId: this.deviceId,\n    };\n  }\n}\n","import HMSVideoTrack from './HMSVideoTrack';\nimport HMSLocalStream from '../streams/HMSLocalStream';\nimport HMSVideoTrackSettings from '../settings/HMSVideoTrackSettings';\nimport { getEmptyVideoTrack, getVideoTrack } from '../../utils/track';\n\nfunction generateHasPropertyChanged(newSettings: HMSVideoTrackSettings, oldSettings: HMSVideoTrackSettings) {\n  return function hasChanged(\n    prop: 'codec' | 'width' | 'height' | 'maxFramerate' | 'maxBitrate' | 'deviceId' | 'advanced',\n  ) {\n    return prop in newSettings && newSettings[prop] !== oldSettings[prop];\n  };\n}\n\nexport default class HMSLocalVideoTrack extends HMSVideoTrack {\n  settings: HMSVideoTrackSettings;\n\n  constructor(stream: HMSLocalStream, track: MediaStreamTrack, settings: HMSVideoTrackSettings, source: string) {\n    super(stream, track, source);\n    stream.tracks.push(this);\n\n    this.settings = settings;\n  }\n\n  private async replaceTrackWith(settings: HMSVideoTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    const withTrack = await getVideoTrack(settings);\n    await (this.stream as HMSLocalStream).replaceTrack(this, withTrack);\n    prevTrack?.stop();\n  }\n\n  private async replaceTrackWithBlank() {\n    const prevTrack = this.nativeTrack;\n    const withTrack = getEmptyVideoTrack(prevTrack);\n    await (this.stream as HMSLocalStream).replaceTrack(this, withTrack);\n    prevTrack?.stop();\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) return;\n    await super.setEnabled(value);\n    (this.stream as HMSLocalStream).trackUpdate(this);\n    if (value) {\n      await this.replaceTrackWith(this.settings);\n    } else {\n      await this.replaceTrackWithBlank();\n    }\n  }\n\n  async setSettings(settings: HMSVideoTrackSettings) {\n    const { width, height, codec, maxFramerate, maxBitrate, deviceId, advanced } = { ...this.settings, ...settings };\n    const newSettings = new HMSVideoTrackSettings(width, height, codec, maxFramerate, maxBitrate, deviceId, advanced);\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n\n    if (hasPropertyChanged('deviceId')) {\n      await this.replaceTrackWith(newSettings);\n    }\n\n    if (hasPropertyChanged('maxBitrate')) {\n      await stream.setMaxBitrate(newSettings.maxBitrate, this);\n    }\n\n    if (hasPropertyChanged('width') || hasPropertyChanged('height') || hasPropertyChanged('advanced')) {\n      await this.nativeTrack.applyConstraints(newSettings.toConstraints());\n    }\n\n    this.settings = newSettings;\n  }\n}\n","import HMSMediaStream from './HMSMediaStream';\nimport HMSTrack from '../tracks/HMSTrack';\nimport HMSTrackSettings from '../settings/HMSTrackSettings';\nimport HMSLocalAudioTrack from '../tracks/HMSLocalAudioTrack';\nimport HMSLocalVideoTrack from '../tracks/HMSLocalVideoTrack';\nimport HMSPublishConnection from '../../connection/publish';\nimport HMSVideoTrackSettings from '../settings/HMSVideoTrackSettings';\nimport HMSLogger from '../../utils/logger';\nimport { HMSAction } from '../../error/HMSAction';\nimport { BuildGetMediaError } from '../../error/HMSErrorFactory';\n\nconst TAG = 'HMSLocalStream';\n\n/** @internal */\nexport default class HMSLocalStream extends HMSMediaStream {\n  /** Connection set when publish is called for the first track */\n  private connection: HMSPublishConnection | null = null;\n\n  setConnection(connection: HMSPublishConnection) {\n    this.connection = connection;\n  }\n\n  static async getLocalScreen(settings: HMSVideoTrackSettings) {\n    const constraints = {\n      video: settings.toConstraints(),\n      audio: false,\n    } as MediaStreamConstraints;\n    let stream;\n    try {\n      // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n      stream = (await navigator.mediaDevices.getDisplayMedia(constraints)) as MediaStream;\n    } catch (err) {\n      throw BuildGetMediaError(err, HMSAction.GetLocalScreen);\n    }\n\n    const local = new HMSLocalStream(stream);\n    const nativeTrack = stream.getVideoTracks()[0];\n    const track = new HMSLocalVideoTrack(local, nativeTrack, settings, 'screen');\n\n    HMSLogger.v(TAG, 'getLocalScreen', track);\n    return track;\n  }\n\n  static async getLocalTracks(settings: HMSTrackSettings) {\n    let stream;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia({\n        audio: settings.audio != null ? settings.audio!.toConstraints() : false,\n        video: settings.video != null ? settings.video!.toConstraints() : false,\n      });\n    } catch (err) {\n      throw BuildGetMediaError(err, HMSAction.GetLocalScreen);\n    }\n\n    const local = new HMSLocalStream(stream);\n    const tracks: Array<HMSTrack> = [];\n    if (settings.audio != null) {\n      const nativeTrack = stream.getAudioTracks()[0];\n      const track = new HMSLocalAudioTrack(local, nativeTrack, settings.audio, 'regular');\n      tracks.push(track);\n    }\n\n    if (settings.video != null) {\n      const nativeTrack = stream.getVideoTracks()[0];\n      const track = new HMSLocalVideoTrack(local, nativeTrack, settings.video, 'regular');\n      tracks.push(track);\n    }\n\n    HMSLogger.v(TAG, 'getLocalTracks', tracks);\n    return tracks;\n  }\n\n  addTransceiver(track: HMSTrack) {\n    // TODO: Add support for simulcast\n    const transceiver = this.connection!.addTransceiver(track.nativeTrack, {\n      streams: [this.nativeStream],\n      direction: 'sendonly',\n      sendEncodings: undefined, // TODO\n    });\n    this.setPreferredCodec(transceiver, track.nativeTrack.kind);\n    return transceiver;\n  }\n\n  async setMaxBitrate(maxBitrate: number, track: HMSTrack): Promise<void> {\n    await this.connection?.setMaxBitrate(maxBitrate, track);\n  }\n\n  // @ts-ignore\n  setPreferredCodec(transceiver: RTCRtpTransceiver, kind: string) {\n    // TODO: Some browsers don't support setCodecPreferences, resort to SDPMunging?\n  }\n\n  async replaceTrack(track: HMSTrack, withTrack: MediaStreamTrack) {\n    const sender = this.connection!.getSenders().find((sender) => sender.track && sender.track!.id === track.trackId);\n\n    if (sender === undefined) throw Error(`No sender found for trackId=${track.trackId}`);\n    this.nativeStream.addTrack(withTrack);\n    this.nativeStream.removeTrack(track.nativeTrack);\n\n    sender.track!.stop(); // If the track is already stopped, this does not throw any error. 😉\n\n    await sender.replaceTrack(withTrack);\n\n    track.nativeTrack = withTrack;\n  }\n\n  removeSender(track: HMSTrack) {\n    let removedSenderCount = 0;\n    this.connection!.getSenders().forEach((sender) => {\n      if (sender.track && sender.track.id === track.trackId) {\n        this.connection!.removeTrack(sender);\n        removedSenderCount += 1;\n\n        // Remove the local reference as well\n        const toRemoveLocalTrackIdx = this.tracks.indexOf(track);\n        if (toRemoveLocalTrackIdx !== -1) {\n          this.tracks.splice(toRemoveLocalTrackIdx, 1);\n        } else throw Error(`Cannot find ${track} in locally stored tracks`);\n      }\n    });\n    if (removedSenderCount !== 1) {\n      throw Error(`Removed ${removedSenderCount} sender's, expected to remove 1`);\n    }\n  }\n\n  trackUpdate(track: HMSTrack) {\n    this.connection?.trackUpdate(track);\n  }\n}\n","import HMSLogger from '../../../utils/logger';\n\nexport enum HMSNotificationMethod {\n  PEER_JOIN,\n  PEER_LEAVE,\n  PEER_LIST,\n  ACTIVE_SPEAKERS,\n  BROADCAST,\n  ROLE_CHANGE,\n  TRACK_METADATA_ADD,\n  TRACK_UPDATE,\n  UNSUPPORTED,\n}\n\nexport const getNotificationMethod = (method: string) => {\n  switch (method) {\n    case 'on-peer-join':\n      return HMSNotificationMethod.PEER_JOIN;\n    case 'on-peer-leave':\n      return HMSNotificationMethod.PEER_LEAVE;\n    case 'peer-list':\n      return HMSNotificationMethod.PEER_LIST;\n    case 'on-track-add':\n      return HMSNotificationMethod.TRACK_METADATA_ADD;\n    case 'on-track-update':\n      return HMSNotificationMethod.TRACK_UPDATE;\n    case 'active-speakers':\n      return HMSNotificationMethod.ACTIVE_SPEAKERS;\n    case 'on-broadcast':\n      return HMSNotificationMethod.BROADCAST;\n    case 'on-role-change':\n      return HMSNotificationMethod.ROLE_CHANGE;\n    default:\n      HMSLogger.d(`method not supported - ${method}`);\n      return HMSNotificationMethod.UNSUPPORTED;\n  }\n};\n","// String enum to pass type as string for identification on receiver's end.\nexport enum HMSMessageType {\n  CHAT = 'chat',\n}\n\nexport const getMessageType = (type: string) => {\n  // Default type is CHAT\n  if (!type) {\n    return HMSMessageType.CHAT;\n  }\n\n  switch (type) {\n    case 'chat':\n      return HMSMessageType.CHAT;\n    default:\n      throw Error(`Unsupported message type=${type} received`);\n  }\n};\n","import HMSMessage from '../../interfaces/message';\nimport { getMessageType, HMSMessageType } from './enums/HMSMessageType';\n\ninterface HMSMessageInit {\n  sender: string;\n  message: string;\n  type: string;\n  receiver?: string;\n  time?: Date | string;\n}\n\nexport default class Message implements HMSMessage {\n  sender: string;\n  receiver: string = '';\n  message: string;\n  time: Date;\n  type: HMSMessageType;\n\n  constructor({ sender, message, type, receiver, time }: HMSMessageInit) {\n    this.sender = sender;\n    this.message = message;\n    this.type = getMessageType(type);\n    if (receiver) {\n      this.receiver = receiver;\n    }\n    // If time is available, creating Message object for a received message.\n    if (time && time instanceof Date) {\n      this.time = time;\n    } else if (time && typeof time == 'string') {\n      // If a received message has time as string(when using JSON.stringify), convert and store as Date object.\n      this.time = new Date(time);\n    } else {\n      this.time = new Date();\n    }\n  }\n}\n","import HMSSpeaker from '../../interfaces/speaker';\n\nexport class Speaker implements HMSSpeaker {\n  peerId: string;\n  trackId: string;\n  audioLevel: number = 0;\n\n  constructor(peerId: string, trackId: string, audioLevel: number) {\n    this.peerId = peerId;\n    this.trackId = trackId;\n    this.audioLevel = audioLevel;\n  }\n}\n\nexport class SpeakerList {\n  speakers: HMSSpeaker[] = [];\n\n  constructor(speakerList: any) {\n    if (speakerList && speakerList.length > 0) {\n      this.speakers = speakerList.map((speaker: any) => new Speaker(speaker.peer_id, speaker.track_id, speaker.level));\n    }\n  }\n}\n","import HMSTrack from '../../media/tracks/HMSTrack';\nimport { Track } from '../../signal/ISignal';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from './enums/HMSNotificationMethod';\nimport Message from './HMSMessage';\nimport { SpeakerList } from './HMSSpeaker';\n\nexport type HMSNotifications = Peer | PeerList | Message | TrackStateNotification | SpeakerList | undefined;\n\nexport interface TrackStateNotification {\n  tracks: Map<string, TrackState>;\n  peer: PeerNotificationInfo;\n}\n\nexport interface PeerNotificationInfo {\n  peer_id: string;\n  info: Info;\n}\n\nexport interface Info {\n  name: string;\n  data: string;\n  userId: string;\n}\n\nexport class TrackState implements Track {\n  mute: boolean;\n  type: 'audio' | 'video';\n  source: 'regular' | 'screen' | 'plugin';\n  description: string;\n  track_id: string;\n  stream_id: string;\n\n  constructor(track: HMSTrack | Track) {\n    this.type = track.type;\n    this.source = track.source || 'regular';\n    this.description = '';\n    if (track instanceof HMSTrack) {\n      this.mute = !track.enabled;\n      this.track_id = track.trackId;\n      this.stream_id = track.stream.id;\n    } else {\n      this.mute = track.mute;\n      this.track_id = track.track_id;\n      this.stream_id = track.stream_id;\n    }\n  }\n}\n\nexport class Peer {\n  peerId: string;\n  info: Info;\n  role: string;\n  tracks: TrackState[] = [];\n\n  constructor(params: any) {\n    this.peerId = params.peer_id;\n    this.info = {\n      name: params.info.name,\n      data: params.info.data,\n      userId: params.info.user_id,\n    };\n    this.role = params.role;\n    this.tracks = Object.values(params.tracks || {});\n  }\n}\n\nexport class PeerList {\n  peers: Peer[];\n\n  constructor(params: any) {\n    this.peers = Object.values(params.peers).map((peer) => new Peer(peer));\n  }\n}\n\nexport const getNotification = (method: HMSNotificationMethod, params: any) => {\n  switch (method) {\n    case HMSNotificationMethod.PEER_JOIN:\n      return new Peer(params);\n    case HMSNotificationMethod.PEER_LEAVE:\n      return new Peer(params);\n    case HMSNotificationMethod.PEER_LIST:\n      return new PeerList(params);\n    case HMSNotificationMethod.BROADCAST:\n      return new Message(params.info);\n    case HMSNotificationMethod.ACTIVE_SPEAKERS:\n      return new SpeakerList(params['speaker-list']);\n    case HMSNotificationMethod.ROLE_CHANGE:\n      return params as TrackStateNotification;\n    case HMSNotificationMethod.TRACK_METADATA_ADD:\n    case HMSNotificationMethod.TRACK_UPDATE: {\n      return params;\n    }\n    default:\n      HMSLogger.d(`method not implemented ${method}`);\n      return params;\n  }\n};\n","export enum TransportState {\n  Joined,\n  Disconnected,\n  Failed,\n  Reconnecting,\n}\n","import ITransportObserver from './ITransportObserver';\nimport ITransport from './ITransport';\nimport HMSPublishConnection from '../connection/publish';\nimport HMSSubscribeConnection from '../connection/subscribe';\nimport InitService from '../signal/init';\nimport { ISignal } from '../signal/ISignal';\nimport { ISignalEventsObserver } from '../signal/ISignalEventsObserver';\nimport JsonRpcSignal from '../signal/jsonrpc';\nimport { HMSConnectionRole, HMSTrickle } from '../connection/model';\nimport { IPublishConnectionObserver } from '../connection/publish/IPublishConnectionObserver';\nimport ISubscribeConnectionObserver from '../connection/subscribe/ISubscribeConnectionObserver';\nimport HMSTrack from '../media/tracks/HMSTrack';\nimport HMSException, { HMSExceptionBuilder } from '../error/HMSException';\nimport { PromiseCallbacks } from '../utils/promise';\nimport { RENEGOTIATION_CALLBACK_ID } from '../utils/constants';\nimport HMSLocalStream from '../media/streams/HMSLocalStream';\nimport HMSTrackSettings from '../media/settings/HMSTrackSettings';\nimport HMSLogger from '../utils/logger';\nimport HMSVideoTrackSettings from '../media/settings/HMSVideoTrackSettings';\nimport HMSMessage from '../interfaces/message';\nimport { TrackState } from '../sdk/models/HMSNotifications';\nimport HMSErrors from '../error/HMSErrors';\nimport { TransportState } from './TransportState';\nimport { HMSAction } from '../error/HMSAction';\n\nconst TAG = '[HMSTransport]:';\ninterface CallbackTriple {\n  promise: PromiseCallbacks<boolean>;\n  action: HMSAction;\n  extra: any;\n}\n\nexport default class HMSTransport implements ITransport {\n  private state: TransportState = TransportState.Disconnected;\n  private tracks: Map<string, TrackState> = new Map();\n  private readonly observer: ITransportObserver;\n  private publishConnection: HMSPublishConnection | null = null;\n  private subscribeConnection: HMSSubscribeConnection | null = null;\n\n  /**\n   * Map of callbacks used to wait for an event to fire.\n   * Used here for:\n   *  1. publish/unpublish waits for [IPublishConnectionObserver.onRenegotiationNeeded] to complete\n   */\n  private readonly callbacks = new Map<string, CallbackTriple>();\n\n  private signalObserver: ISignalEventsObserver = {\n    onOffer: async (jsep: RTCSessionDescriptionInit) => {\n      await this.subscribeConnection!.setRemoteDescription(jsep);\n      for (const candidate of this.subscribeConnection!.candidates) {\n        await this.subscribeConnection!.addIceCandidate(candidate);\n      }\n      this.subscribeConnection!.candidates.length = 0;\n      const answer = await this.subscribeConnection!.createAnswer();\n      await this.subscribeConnection!.setLocalDescription(answer);\n      this.signal.answer(answer);\n    },\n    onTrickle: async (trickle: HMSTrickle) => {\n      const connection =\n        trickle.target === HMSConnectionRole.Publish ? this.publishConnection! : this.subscribeConnection!;\n      if (connection.remoteDescription === null) {\n        // ICE candidates can't be added without any remote session description\n        connection.candidates.push(trickle.candidate);\n      } else {\n        await connection.addIceCandidate(trickle.candidate);\n      }\n    },\n    onNotification: (message: Object) => this.observer.onNotification(message),\n    onFailure: (exception: HMSException) => {\n      // TODO: Init the reconnecting logic\n      this.observer.onFailure(exception);\n    },\n  };\n\n  private readonly signal: ISignal = new JsonRpcSignal(this.signalObserver);\n\n  private publishConnectionObserver: IPublishConnectionObserver = {\n    onRenegotiationNeeded: async () => {\n      HMSLogger.d(TAG, `⏳ [role=PUBLISH] onRenegotiationNeeded START`, this.tracks);\n      const callback = this.callbacks.get(RENEGOTIATION_CALLBACK_ID);\n      this.callbacks.delete(RENEGOTIATION_CALLBACK_ID);\n\n      try {\n        const offer = await this.publishConnection!.createOffer();\n        await this.publishConnection!.setLocalDescription(offer);\n        const answer = await this.signal.offer(offer, this.tracks);\n        await this.publishConnection!.setRemoteDescription(answer);\n        callback!.promise.resolve(true);\n        HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded DONE ✅`);\n      } catch (err) {\n        let ex: HMSException;\n        if (err instanceof HMSException) {\n          ex = err;\n        } else {\n          ex = new HMSExceptionBuilder(HMSErrors.PeerConnectionFailed)\n            .action(callback!.action)\n            .errorInfo(err.message)\n            .build();\n        }\n\n        callback!.promise.reject(ex);\n        HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded FAILED ❌`);\n      }\n    },\n\n    onIceConnectionChange: (newState: RTCIceConnectionState) => {\n      if (newState === 'failed') {\n        this.handleIceConnectionFailure(HMSConnectionRole.Publish);\n      }\n    },\n  };\n\n  private subscribeConnectionObserver: ISubscribeConnectionObserver = {\n    onApiChannelMessage: (message: string) => {\n      this.observer.onNotification(JSON.parse(message));\n    },\n\n    onTrackAdd: (track: HMSTrack) => {\n      HMSLogger.d(TAG, '[Subscribe] onTrackAdd', track);\n      this.observer.onTrackAdd(track);\n    },\n\n    onTrackRemove: (track: HMSTrack) => {\n      HMSLogger.d(TAG, '[Subscribe] onTrackRemove', track);\n      this.observer.onTrackRemove(track);\n    },\n\n    onIceConnectionChange: (newState: RTCIceConnectionState) => {\n      if (newState === 'failed') {\n        this.handleIceConnectionFailure(HMSConnectionRole.Subscribe);\n      }\n    },\n  };\n\n  private handleIceConnectionFailure(role: HMSConnectionRole) {\n    // TODO: Should we initiate an ice-restart?\n    // TODO: Should we close both peer-connections or just one?\n\n    const ex = new HMSExceptionBuilder(HMSErrors.PeerConnectionFailed)\n      .errorInfo(`[role=${role}] Ice connection state FAILED`)\n      .build();\n\n    this.state = TransportState.Failed;\n    this.observer.onFailure(ex);\n  }\n\n  constructor(observer: ITransportObserver) {\n    this.observer = observer;\n  }\n\n  async getLocalScreen(settings: HMSVideoTrackSettings): Promise<HMSTrack> {\n    return await HMSLocalStream.getLocalScreen(settings);\n  }\n\n  async getLocalTracks(settings: HMSTrackSettings): Promise<Array<HMSTrack>> {\n    return await HMSLocalStream.getLocalTracks(settings);\n  }\n\n  async join(\n    authToken: string,\n    peerId: string,\n    customData: any,\n    initEndpoint?: string,\n    autoSubscribeVideo: boolean = true,\n  ): Promise<void> {\n    if (this.state !== TransportState.Disconnected) {\n      throw new HMSExceptionBuilder(HMSErrors.AlreadyJoined).action(HMSAction.Join).build();\n    }\n    const config = await InitService.fetchInitConfig(authToken, initEndpoint);\n\n    HMSLogger.d(TAG, '⏳ join: connecting to ws endpoint', config.endpoint);\n    await this.signal.open(`${config.endpoint}?peer=${peerId}&token=${authToken}`);\n    HMSLogger.d(TAG, '✅ join: connected to ws endpoint');\n\n    HMSLogger.d(TAG, customData);\n\n    this.publishConnection = new HMSPublishConnection(\n      this.signal,\n      config.rtcConfiguration,\n      this.publishConnectionObserver,\n      this,\n    );\n\n    this.subscribeConnection = new HMSSubscribeConnection(\n      this.signal,\n      config.rtcConfiguration,\n      this.subscribeConnectionObserver,\n    );\n\n    HMSLogger.d(TAG, '⏳ join: Negotiating over PUBLISH connection');\n    const offer = await this.publishConnection.createOffer();\n    await this.publishConnection.setLocalDescription(offer);\n    const answer = await this.signal.join(customData.name, peerId, offer, !autoSubscribeVideo);\n    await this.publishConnection.setRemoteDescription(answer);\n    for (const candidate of this.publishConnection.candidates) {\n      await this.publishConnection.addIceCandidate(candidate);\n    }\n    this.publishConnection.initAfterJoin();\n    HMSLogger.d(TAG, '✅ join: Negotiated over PUBLISH connection');\n\n    // TODO: Handle exceptions raised - wrap them in HMSException\n    HMSLogger.d(TAG, '✅ join: successful');\n  }\n\n  async leave(): Promise<void> {\n    await this.publishConnection!.close();\n    await this.subscribeConnection!.close();\n    this.signal.leave();\n    await this.signal.close();\n  }\n\n  private async publishTrack(track: HMSTrack): Promise<void> {\n    HMSLogger.d(TAG, `⏳ publishTrack: trackId=${track.trackId}`, track);\n    this.tracks.set(track.trackId, new TrackState(track));\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.Publish,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.setConnection(this.publishConnection!);\n    stream.addTransceiver(track);\n    await p;\n\n    // @ts-ignore\n    const maxBitrate = track.settings.maxBitrate;\n    await stream\n      .setMaxBitrate(maxBitrate, track)\n      .then(() => {\n        HMSLogger.i(TAG, `Setting maxBitrate for ${track.source} ${track.type} to ${maxBitrate} kpbs`);\n      })\n      .catch((error) => HMSLogger.e(TAG, 'Failed setting maxBitrate', error));\n\n    HMSLogger.d(TAG, `✅ publishTrack: trackId=${track.trackId}`, this.callbacks);\n  }\n\n  private async unpublishTrack(track: HMSTrack): Promise<void> {\n    HMSLogger.d(TAG, `⏳ unpublishTrack: trackId=${track.trackId}`, track);\n    this.tracks.delete(track.trackId);\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.Unpublish,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.removeSender(track);\n    await p;\n    HMSLogger.d(TAG, `✅ unpublishTrack: trackId=${track.trackId}`, this.callbacks);\n  }\n\n  async publish(tracks: Array<HMSTrack>): Promise<void> {\n    for (const track of tracks) {\n      await this.publishTrack(track);\n    }\n  }\n\n  async unpublish(tracks: Array<HMSTrack>): Promise<void> {\n    for (const track of tracks) {\n      await this.unpublishTrack(track);\n    }\n  }\n\n  sendMessage(message: HMSMessage) {\n    this.signal.broadcast(message);\n  }\n\n  trackUpdate(track: HMSTrack) {\n    const currentTrackStates = Array.from(this.tracks.values());\n    const originalTrackState = currentTrackStates.find(\n      (trackState) => track.type === trackState.type && track.source === trackState.source,\n    );\n    if (originalTrackState) {\n      const newTrackState = new TrackState({\n        ...originalTrackState,\n        mute: !track.enabled,\n      });\n      this.tracks.set(originalTrackState.track_id, newTrackState);\n      HMSLogger.d(TAG, 'Track Update', this.tracks, track);\n      this.signal.trackUpdate(new Map([[originalTrackState.track_id, newTrackState]]));\n    }\n  }\n}\n","import HMSException from '../error/HMSException';\nimport HMSTrack from '../media/tracks/HMSTrack';\nimport HMSPeer from './hms-peer';\nimport HMSMessage from './message';\nimport HMSRoom from './room';\nimport HMSSpeaker from './speaker';\n\nexport enum HMSRoomUpdate {\n  PEER_ADDED,\n  PEER_REMOVED,\n  PEER_KNOCKED,\n  ROOM_TYPE_CHANGED,\n  METADATA_UPDATED,\n  SCREENSHARE_STARTED,\n  SCREENSHARE_STOPPED,\n  DEFAULT_UPDATE,\n}\n\nexport enum HMSPeerUpdate {\n  PEER_JOINED,\n  PEER_LEFT,\n  AUDIO_TOGGLED,\n  VIDEO_TOGGLED,\n  BECAME_DOMINANT_SPEAKER,\n  RESIGNED_DOMINANT_SPEAKER,\n  STARTED_SPEAKING,\n  STOPPED_SPEAKING,\n}\n\nexport enum HMSTrackUpdate {\n  TRACK_ADDED,\n  TRACK_REMOVED,\n  TRACK_MUTED,\n  TRACK_UNMUTED,\n  TRACK_DESCRIPTION_CHANGED,\n}\n\nexport interface HMSAudioListener {\n  onAudioLevelUpdate(speakers: HMSSpeaker[]): void;\n}\n\nexport default interface HMSUpdateListener {\n  onJoin(room: HMSRoom): void;\n  onRoomUpdate(type: HMSRoomUpdate, room: HMSRoom): void;\n  onPeerUpdate(type: HMSPeerUpdate, peer: HMSPeer | null): void;\n  onTrackUpdate(type: HMSTrackUpdate, track: HMSTrack, peer: HMSPeer): void;\n  onMessageReceived(message: HMSMessage): void;\n  onError(error: HMSException): void;\n}\n","import HMSErrors from '../error/HMSErrors';\nimport { HMSExceptionBuilder } from '../error/HMSException';\n\nexport interface AuthToken {\n  roomId: string;\n  userId: string;\n  role: string;\n}\n\nexport default function decodeJWT(token: string): AuthToken {\n  if (token.length === 0) {\n    throw new HMSExceptionBuilder(HMSErrors.MissingToken).build();\n  }\n\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    throw new HMSExceptionBuilder(HMSErrors.InvalidTokenFormat).build();\n  }\n\n  const payloadStr = atob(parts[1]);\n  try {\n    const payload = JSON.parse(payloadStr);\n    return {\n      roomId: payload.room_id,\n      userId: payload.user_id,\n      role: payload.role,\n    } as AuthToken;\n  } catch (err) {\n    throw new HMSExceptionBuilder(HMSErrors.TokenMissingRoomId).build();\n  }\n}\n","import HMSPeer from '../interfaces/hms-peer';\nimport HMSTrack from '../media/tracks/HMSTrack';\n\ntype HMSPeerInit = {\n  peerId: string;\n  name: string;\n  isLocal: boolean;\n  customerDescription: string;\n  role?: string;\n};\n\nexport default class Peer implements HMSPeer {\n  peerId: string;\n  isLocal: boolean;\n  name: string;\n  customerDescription: string = '';\n  videoTrack?: HMSTrack | null;\n  audioTrack?: HMSTrack | null;\n  auxiliaryTracks: HMSTrack[] = [];\n  role?: string = '';\n\n  constructor({ peerId, name, isLocal, role, customerDescription }: HMSPeerInit) {\n    this.name = name;\n    this.peerId = peerId;\n    this.isLocal = isLocal;\n    this.role = role;\n    this.customerDescription = customerDescription;\n  }\n}\n","import HMSTrack from '../media/tracks/HMSTrack';\nimport { HMSTrackType } from '../media/tracks';\nimport Peer from '../peer';\nimport { HMSNotificationMethod } from './models/enums/HMSNotificationMethod';\nimport {\n  Peer as PeerNotification,\n  HMSNotifications,\n  PeerList,\n  TrackStateNotification,\n  TrackState,\n} from './models/HMSNotifications';\nimport HMSLogger from '../utils/logger';\nimport HMSPeer from '../interfaces/hms-peer';\nimport HMSUpdateListener, { HMSAudioListener, HMSPeerUpdate, HMSTrackUpdate } from '../interfaces/update-listener';\nimport { SpeakerList } from './models/HMSSpeaker';\n\ninterface TrackStateEntry {\n  peerId: string;\n  trackInfo: TrackState;\n}\n\nexport default class NotificationManager extends EventTarget {\n  hmsPeerList: Map<string, HMSPeer> = new Map();\n  localPeer!: HMSPeer | null;\n\n  private TAG: string = '[Notification Manager]:';\n  private tracksToProcess: Map<string, HMSTrack> = new Map();\n  private trackStateMap: Map<string, TrackStateEntry> = new Map();\n  private listener!: HMSUpdateListener;\n  private audioListener: HMSAudioListener | null = null;\n\n  handleNotification(\n    method: HMSNotificationMethod,\n    notification: HMSNotifications,\n    listener: HMSUpdateListener,\n    audioListener: HMSAudioListener | null,\n  ) {\n    this.listener = listener;\n    this.audioListener = audioListener;\n    switch (method) {\n      case HMSNotificationMethod.PEER_JOIN: {\n        const peer = notification as PeerNotification;\n        HMSLogger.d(this.TAG, `PEER_JOIN event`, peer, notification);\n        this.handlePeerJoin(peer);\n        break;\n      }\n      case HMSNotificationMethod.PEER_LEAVE: {\n        const peer = notification as PeerNotification;\n        HMSLogger.d(this.TAG, `PEER_LEAVE event`, peer);\n        this.handlePeerLeave(peer);\n        break;\n      }\n      case HMSNotificationMethod.PEER_LIST: {\n        const peerList = notification as PeerList;\n        HMSLogger.d(this.TAG, `PEER_LIST event`, peerList);\n        this.handlePeerList(peerList);\n        break;\n      }\n      case HMSNotificationMethod.TRACK_METADATA_ADD: {\n        this.handleTrackMetadataAdd(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.TRACK_UPDATE: {\n        this.handleTrackUpdate(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ROLE_CHANGE: {\n        this.handleRoleChange(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ACTIVE_SPEAKERS:\n        this.handleActiveSpeakers(notification as SpeakerList);\n        break;\n      default:\n        return;\n    }\n  }\n\n  handleRoleChange(params: TrackStateNotification) {\n    // @DISCUSS: Make everything event based instead?\n    this.dispatchEvent(new CustomEvent('role-change', { detail: { params } }));\n  }\n\n  handleTrackMetadataAdd(params: TrackStateNotification) {\n    HMSLogger.d(this.TAG, `TRACK_METADATA_ADD`, params);\n\n    for (const [trackId, trackEntry] of Object.entries(params.tracks)) {\n      this.trackStateMap.set(trackId, {\n        peerId: params.peer.peer_id,\n        trackInfo: trackEntry,\n      });\n    }\n\n    this.processPendingTracks();\n  }\n\n  private processPendingTracks() {\n    const tracksCopy = new Map(this.tracksToProcess);\n\n    tracksCopy.forEach((track) => {\n      const state = this.trackStateMap.get(track.trackId);\n      if (!state) return;\n\n      const hmsPeer = this.hmsPeerList.get(state.peerId);\n      if (!hmsPeer) return;\n\n      track.source = state.trackInfo.source;\n      track.setEnabled(!state.trackInfo.mute);\n\n      switch (track.type) {\n        case HMSTrackType.AUDIO:\n          if (!hmsPeer.audioTrack) {\n            hmsPeer.audioTrack = track;\n          }\n          // @DISCUSS: Do we have auxilliary audio tracks too?\n          break;\n\n        case HMSTrackType.VIDEO:\n          if (!hmsPeer.videoTrack && track.source === 'regular') {\n            hmsPeer.videoTrack = track;\n          } else {\n            hmsPeer.auxiliaryTracks.push(track);\n          }\n      }\n\n      track.type === HMSTrackType.AUDIO && this.dispatchEvent(new CustomEvent('track-added', { detail: track }));\n      this.listener.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, hmsPeer);\n      this.tracksToProcess.delete(track.trackId);\n    });\n  }\n\n  /**\n   * Sets the tracks to peer and returns the peer\n   */\n  handleOnTrackAdd = (track: HMSTrack) => {\n    HMSLogger.d(this.TAG, `ONTRACKADD`, track);\n    this.tracksToProcess.set(track.trackId, track);\n    this.processPendingTracks();\n  };\n\n  /**\n   * Sets the track of corresponding peer to null and returns the peer\n   */\n  handleOnTrackRemove = (track: HMSTrack) => {\n    HMSLogger.d(this.TAG, `ONTRACKREMOVE`, track);\n    const trackStateEntry = this.trackStateMap.get(track.trackId);\n\n    if (!trackStateEntry) return;\n\n    const hmsPeer = this.hmsPeerList.get(trackStateEntry.peerId);\n\n    if (hmsPeer) {\n      switch (track.type) {\n        case HMSTrackType.AUDIO:\n          hmsPeer.audioTrack = null;\n          break;\n        case HMSTrackType.VIDEO: {\n          const screenShareTrackIndex = hmsPeer.auxiliaryTracks.indexOf(track);\n\n          if (screenShareTrackIndex > -1) {\n            // @TODO: change this based on source\n            hmsPeer.auxiliaryTracks.splice(screenShareTrackIndex, 1);\n          } else {\n            hmsPeer.videoTrack = null;\n          }\n        }\n      }\n      track.type === HMSTrackType.AUDIO && this.dispatchEvent(new CustomEvent('track-removed', { detail: track }));\n      this.listener.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n    }\n  };\n\n  handleTrackUpdate = (params: TrackStateNotification) => {\n    HMSLogger.d(this.TAG, `TRACK_UPDATE`, params);\n\n    const hmsPeer = this.hmsPeerList.get(params.peer.peer_id);\n    if (!hmsPeer) return;\n\n    for (const [trackId, trackEntry] of Object.entries(params.tracks)) {\n      const currentTrackStateInfo = Object.assign({}, this.trackStateMap.get(trackId)?.trackInfo);\n\n      const track = this.getPeerTrackByTrackId(hmsPeer.peerId, trackId);\n\n      this.trackStateMap.set(trackId, {\n        peerId: params.peer.peer_id,\n        trackInfo: { ...currentTrackStateInfo, ...trackEntry },\n      });\n\n      // TRACK_UPDATE came before TRACK_ADD -> update state, process pending tracks when TRACK_ADD arrives.\n      if (!track || this.tracksToProcess.has(trackId)) {\n        this.processPendingTracks();\n      } else {\n        track.setEnabled(!trackEntry.mute);\n\n        if (currentTrackStateInfo.mute !== trackEntry.mute) {\n          if (trackEntry.mute) {\n            this.listener.onTrackUpdate(HMSTrackUpdate.TRACK_MUTED, track, hmsPeer);\n          } else {\n            this.listener.onTrackUpdate(HMSTrackUpdate.TRACK_UNMUTED, track, hmsPeer);\n          }\n        } else if (currentTrackStateInfo.description !== trackEntry.description) {\n          this.listener.onTrackUpdate(HMSTrackUpdate.TRACK_DESCRIPTION_CHANGED, track, hmsPeer);\n        }\n      }\n    }\n  };\n\n  cleanUp = () => {\n    this.hmsPeerList.clear();\n  };\n\n  findPeerByPeerId = (peerId: string) => {\n    if (this.localPeer?.peerId === peerId) {\n      return this.localPeer;\n    }\n\n    return this.hmsPeerList.get(peerId);\n  };\n\n  private handlePeerJoin = (peer: PeerNotification) => {\n    const hmsPeer = new Peer({\n      peerId: peer.peerId,\n      name: peer.info.name,\n      isLocal: false,\n      customerDescription: '',\n      role: peer.role,\n    });\n\n    this.hmsPeerList.set(peer.peerId, hmsPeer);\n    HMSLogger.d(this.TAG, `adding to the peerList`, hmsPeer);\n\n    peer.tracks.forEach((track) => {\n      this.trackStateMap.set(track.track_id, {\n        peerId: peer.peerId,\n        trackInfo: track,\n      });\n    });\n\n    this.processPendingTracks();\n  };\n\n  private handlePeerLeave = (peer: PeerNotification) => {\n    this.hmsPeerList.delete(peer.peerId);\n  };\n\n  private handlePeerList = (peerList: PeerList) => {\n    const peers = peerList.peers;\n    peers?.forEach((peer) => this.handlePeerJoin(peer));\n  };\n\n  /**\n   * @param speakerList List of speakers[peer_id, level] sorted by level in descending order.\n   */\n  handleActiveSpeakers(speakerList: SpeakerList) {\n    const speakers = speakerList.speakers;\n    this.audioListener?.onAudioLevelUpdate(speakers);\n    const dominantSpeaker = speakers[0];\n    if (dominantSpeaker) {\n      const dominantSpeakerPeer = this.findPeerByPeerId(dominantSpeaker.peerId);\n      this.listener.onPeerUpdate(HMSPeerUpdate.BECAME_DOMINANT_SPEAKER, dominantSpeakerPeer!);\n    } else {\n      this.listener.onPeerUpdate(HMSPeerUpdate.RESIGNED_DOMINANT_SPEAKER, null);\n    }\n  }\n\n  private getPeerTrackByTrackId(peerId: string, trackId: string) {\n    const peer = this.findPeerByPeerId(peerId);\n\n    if (peer?.audioTrack?.trackId === trackId) {\n      return peer.audioTrack;\n    } else if (peer?.videoTrack?.trackId === trackId) {\n      return peer.videoTrack;\n    } else {\n      return peer?.auxiliaryTracks.find((track) => track.trackId === trackId);\n    }\n  }\n}\n","import HMSVideoTrackSettings, { HMSVideoTrackSettingsBuilder } from './HMSVideoTrackSettings';\nimport HMSAudioTrackSettings, { HMSAudioTrackSettingsBuilder } from './HMSAudioTrackSettings';\nimport { HMSExceptionBuilder } from '../../error/HMSException';\nimport HMSErrors from '../../error/HMSErrors';\n\nexport class HMSTrackSettingsBuilder {\n  private _video: HMSVideoTrackSettings | null = new HMSVideoTrackSettingsBuilder().build();\n  private _audio: HMSAudioTrackSettings | null = new HMSAudioTrackSettingsBuilder().build();\n  private _simulcast = false;\n\n  video(video: HMSVideoTrackSettings | null) {\n    this._video = video;\n    return this;\n  }\n\n  audio(audio: HMSAudioTrackSettings | null) {\n    this._audio = audio;\n    return this;\n  }\n\n  simulcast(enabled: boolean) {\n    this._simulcast = enabled;\n    return this;\n  }\n\n  build() {\n    if (this._audio === null && this._video === null) {\n      throw new HMSExceptionBuilder(HMSErrors.NothingToReturn).build();\n    }\n\n    if (this._video === null && this._simulcast) {\n      throw Error('Cannot enable simulcast when no video settings are provided');\n    }\n\n    return new HMSTrackSettings(this._video, this._audio, this._simulcast);\n  }\n}\n\nexport default class HMSTrackSettings {\n  readonly video: HMSVideoTrackSettings | null;\n  readonly audio: HMSAudioTrackSettings | null;\n  readonly simulcast: boolean;\n\n  constructor(video: HMSVideoTrackSettings | null, audio: HMSAudioTrackSettings | null, simulcast: boolean) {\n    this.video = video;\n    this.audio = audio;\n    this.simulcast = simulcast;\n  }\n}\n","import Peer from '../../peer';\nimport HMSRoom, { HMSRoomType } from '../../interfaces/room';\n\nexport default class Room implements HMSRoom {\n  id: string;\n  name: string;\n  peers: Peer[];\n  shareableLink!: string;\n  type!: HMSRoomType;\n  hasWaitingRoom!: boolean;\n\n  constructor(id: string, name: string, peers: Peer[]) {\n    this.id = id;\n    this.name = name;\n    this.peers = peers;\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport HMSAudioTrack from '../media/tracks/HMSAudioTrack';\nimport NotificationManager from '../sdk/NotificationManager';\n\nconst SILENT_AUDIO_URL = 'https://res.cloudinary.com/dlzh3j8em/video/upload/v1619210717/silence_xko7fm.mp3';\n\nexport default class HMSAudioSinkManager {\n  private audioSink: HTMLElement;\n  private notificationManager: NotificationManager;\n\n  constructor(notificationManager: NotificationManager, elementId?: string) {\n    const audioSink = document.createElement('div');\n    audioSink.id = `HMS-SDK-audio-sink-${uuid()}`;\n    const userElement = elementId && document.getElementById(elementId);\n    const audioSinkParent = userElement || document.body;\n    audioSinkParent.append(audioSink);\n\n    this.audioSink = audioSink;\n    this.addSilentAudio();\n    this.notificationManager = notificationManager;\n    this.notificationManager.addEventListener('track-added', this.handleTrackAdd as EventListener);\n    this.notificationManager.addEventListener('track-removed', this.handleTrackRemove as EventListener);\n  }\n\n  cleanUp() {\n    this.notificationManager.removeEventListener('track-added', this.handleTrackAdd as EventListener);\n    this.notificationManager.removeEventListener('track-removed', this.handleTrackRemove as EventListener);\n  }\n\n  private addSilentAudio() {\n    const silentAudio = document.createElement('audio');\n    silentAudio.autoplay = true;\n    silentAudio.style.display = 'none';\n    silentAudio.id = `HMS-SDK-silent-audio-track-${uuid()}`;\n    silentAudio.src = SILENT_AUDIO_URL;\n\n    this.audioSink.append(silentAudio);\n  }\n\n  private handleTrackAdd = (event: CustomEvent<HMSAudioTrack>) => {\n    const track = event.detail;\n    const audioEl = document.createElement('audio');\n    audioEl.autoplay = true;\n    audioEl.style.display = 'none';\n    audioEl.id = track.trackId;\n    audioEl.srcObject = new MediaStream([track.nativeTrack]);\n\n    this.audioSink.append(audioEl);\n  };\n\n  private handleTrackRemove = (event: CustomEvent<HMSAudioTrack>) => {\n    const track = event.detail;\n    document.getElementById(track.trackId)?.remove();\n  };\n}\n","import HMSConfig from '../interfaces/config';\nimport InitialSettings from '../interfaces/settings';\nimport HMSInterface, { HMSAnalyticsLevel } from '../interfaces/hms';\nimport HMSPeer from '../interfaces/hms-peer';\nimport HMSTransport from '../transport';\nimport ITransportObserver from '../transport/ITransportObserver';\nimport HMSUpdateListener, { HMSAudioListener, HMSPeerUpdate, HMSTrackUpdate } from '../interfaces/update-listener';\nimport HMSLogger, { HMSLogLevel } from '../utils/logger';\nimport decodeJWT from '../utils/jwt';\nimport { getNotificationMethod, HMSNotificationMethod } from './models/enums/HMSNotificationMethod';\nimport { getNotification, HMSNotifications, Peer as PeerNotification } from './models/HMSNotifications';\nimport NotificationManager from './NotificationManager';\nimport HMSTrack from '../media/tracks/HMSTrack';\nimport { HMSTrackType } from '../media/tracks';\nimport HMSException from '../error/HMSException';\nimport { HMSTrackSettingsBuilder } from '../media/settings/HMSTrackSettings';\nimport HMSRoom from './models/HMSRoom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Peer from '../peer';\nimport Message from './models/HMSMessage';\nimport HMSVideoTrackSettings, { HMSVideoTrackSettingsBuilder } from '../media/settings/HMSVideoTrackSettings';\nimport HMSAudioTrackSettings, { HMSAudioTrackSettingsBuilder } from '../media/settings/HMSAudioTrackSettings';\nimport HMSAudioSinkManager from '../audio-sink-manager';\n\nexport class HMSSdk implements HMSInterface {\n  logLevel: HMSLogLevel = HMSLogLevel.INFO;\n  analyticsLevel: HMSAnalyticsLevel = HMSAnalyticsLevel.OFF;\n  transport!: HMSTransport | null;\n  roomId!: string | null;\n  localPeer!: HMSPeer | null;\n\n  private TAG: string = '[HMSSdk]:';\n  private notificationManager: NotificationManager = new NotificationManager();\n  private listener!: HMSUpdateListener | null;\n  private audioListener: HMSAudioListener | null = null;\n  private audioSinkManager!: HMSAudioSinkManager;\n  private hmsRoom?: HMSRoom | null;\n  private published: boolean = false;\n  private publishParams: any = null;\n\n  private observer: ITransportObserver = {\n    onNotification: (message: any) => {\n      const method = getNotificationMethod(message.method);\n      const notification = getNotification(method, message.params);\n      // @TODO: Notification manager needs to be refactored. The current implementation is not manageable\n      // this will pollute logs\n      if (method !== HMSNotificationMethod.ACTIVE_SPEAKERS) {\n        HMSLogger.d(this.TAG, `onNotification: message=${message}`);\n      }\n      this.notificationManager.handleNotification(method, notification, this.listener!, this.audioListener);\n      this.onNotificationHandled(method, notification);\n    },\n\n    onTrackAdd: (track: HMSTrack) => {\n      this.notificationManager.handleOnTrackAdd(track);\n    },\n\n    onTrackRemove: (track: HMSTrack) => {\n      this.notificationManager.handleOnTrackRemove(track);\n    },\n\n    onFailure: (exception: HMSException) => {\n      this.listener?.onError(exception);\n    },\n  };\n\n  join(config: HMSConfig, listener: HMSUpdateListener) {\n    this.notificationManager.addEventListener('role-change', (e: any) => {\n      this.publishParams = e.detail.params.role.publishParams;\n    });\n    this.transport = new HMSTransport(this.observer);\n    this.listener = listener;\n    this.audioSinkManager = new HMSAudioSinkManager(this.notificationManager, config.audioSinkElementId);\n    const { roomId, role } = decodeJWT(config.authToken);\n\n    const peerId = uuidv4();\n\n    this.localPeer = new Peer({\n      peerId,\n      name: config.userName,\n      isLocal: true,\n      role,\n      customerDescription: config.metaData,\n    });\n    this.notificationManager.localPeer = this.localPeer;\n\n    HMSLogger.d(this.TAG, `⏳ Joining room ${roomId}`);\n\n    this.transport\n      .join(\n        config.authToken,\n        this.localPeer.peerId,\n        { name: config.userName },\n        config.initEndpoint,\n        config.autoVideoSubscribe,\n      )\n      .then(() => {\n        HMSLogger.d(this.TAG, `✅ Joined room ${roomId}`);\n        this.roomId = roomId;\n        if (!this.published) {\n          this.publish(config.settings);\n        }\n        this.listener?.onJoin(this.createRoom());\n      });\n  }\n\n  private cleanUp() {\n    this.audioSinkManager.cleanUp();\n    this.notificationManager.cleanUp();\n\n    this.published = false;\n    this.localPeer = null;\n    this.roomId = null;\n    this.hmsRoom = null;\n    this.transport = null;\n    this.listener = null;\n  }\n\n  async leave() {\n    if (this.roomId) {\n      const roomId = this.roomId;\n      HMSLogger.d(this.TAG, `⏳ Leaving room ${roomId}`);\n      this.localPeer?.audioTrack?.nativeTrack.stop();\n      this.localPeer?.videoTrack?.nativeTrack.stop();\n      await this.transport?.leave();\n      this.cleanUp();\n      HMSLogger.d(this.TAG, `✅ Left room ${roomId}`);\n    }\n  }\n\n  getLocalPeer(): HMSPeer {\n    return this.localPeer!;\n  }\n\n  getPeers(): HMSPeer[] {\n    const remotePeers = Array.from(this.notificationManager.hmsPeerList, (x) => x[1]);\n    const peers = this.localPeer ? [...remotePeers, this.getLocalPeer()] : remotePeers;\n    HMSLogger.d(this.TAG, `Got peers`, peers);\n    return peers;\n  }\n\n  sendMessage(type: string, message: string, receiver?: string) {\n    const hmsMessage = new Message({ sender: this.localPeer!.peerId, type, message, receiver });\n    HMSLogger.d(this.TAG, 'Sending Message:: ', hmsMessage);\n    this.transport!.sendMessage(hmsMessage);\n    return hmsMessage;\n  }\n\n  async startScreenShare(onStop: () => void) {\n    const { screen } = this.publishParams;\n\n    if ((this.localPeer?.auxiliaryTracks?.length || 0) > 0) {\n      throw Error('Cannot share multiple screens');\n    }\n\n    const track = await this.transport!.getLocalScreen(\n      new HMSVideoTrackSettingsBuilder()\n        .maxBitrate(screen.bitRate)\n        .codec(screen.codec)\n        .maxFramerate(screen.frameRate)\n        .setWidth(screen.width)\n        .setHeight(screen.height)\n        .build(),\n    );\n    track.nativeTrack.onended = () => {\n      this.stopEndedScreenshare(onStop);\n    };\n    await this.transport!.publish([track]);\n    this.localPeer?.auxiliaryTracks.push(track);\n  }\n\n  private async stopEndedScreenshare(onStop: () => void) {\n    HMSLogger.d(this.TAG, `✅ Screenshare ended natively`);\n    await this.stopScreenShare();\n    onStop();\n  }\n\n  async stopScreenShare() {\n    HMSLogger.d(this.TAG, `✅ Screenshare ended from app`);\n    const track = this.localPeer?.auxiliaryTracks.find((t) => t.type === HMSTrackType.VIDEO && t.source === 'screen');\n    if (track) {\n      await track.setEnabled(false);\n      this.transport!.unpublish([track]);\n      this.localPeer!.auxiliaryTracks.splice(this.localPeer!.auxiliaryTracks.indexOf(track), 1);\n    }\n  }\n\n  addAudioListener(audioListener: HMSAudioListener) {\n    this.audioListener = audioListener;\n  }\n\n  private onNotificationHandled(method: HMSNotificationMethod, notification: HMSNotifications) {\n    // HMSLogger.d(this.TAG, 'onNotificationHandled', method);\n    switch (method) {\n      case HMSNotificationMethod.PEER_JOIN: {\n        const peer = notification as PeerNotification;\n        const hmsPeer = this.notificationManager.findPeerByPeerId(peer.peerId);\n        hmsPeer\n          ? this.listener!.onPeerUpdate(HMSPeerUpdate.PEER_JOINED, hmsPeer)\n          : HMSLogger.e(this.TAG, `⚠️ peer not found in peer-list`, peer, this.notificationManager.hmsPeerList);\n        break;\n      }\n\n      case HMSNotificationMethod.PEER_LEAVE: {\n        const peer = notification as PeerNotification;\n        const hmsPeer = new Peer({\n          peerId: peer.peerId,\n          name: peer.info.name,\n          isLocal: false,\n          customerDescription: peer.info.data,\n        }); //@TODO: There should be a cleaner way\n\n        if (hmsPeer.audioTrack) {\n          this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.audioTrack, hmsPeer);\n        }\n\n        if (hmsPeer.videoTrack) {\n          this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.videoTrack, hmsPeer);\n        }\n\n        hmsPeer.auxiliaryTracks?.forEach((track) => {\n          this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n        });\n\n        this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LEFT, hmsPeer);\n        break;\n      }\n\n      case HMSNotificationMethod.ROLE_CHANGE:\n        break;\n\n      case HMSNotificationMethod.ACTIVE_SPEAKERS:\n        break;\n\n      case HMSNotificationMethod.BROADCAST:\n        const message = notification as Message;\n        HMSLogger.d(this.TAG, `Received Message:: `, message);\n        this.listener?.onMessageReceived(message);\n        break;\n    }\n  }\n\n  private publish(settings: InitialSettings) {\n    const { isAudioMuted, isVideoMuted, audioInputDeviceId, videoDeviceId } = settings;\n    const { audio, video, allowed } = this.publishParams;\n    const canPublishAudio = allowed && allowed.includes('audio');\n    const canPublishVideo = allowed && allowed.includes('video');\n    HMSLogger.d(this.TAG, `Device IDs :  ${audioInputDeviceId} ,  ${videoDeviceId} `);\n    const audioSettings: HMSAudioTrackSettings = new HMSAudioTrackSettingsBuilder()\n      .codec(audio.codec)\n      .maxBitrate(audio.bitRate)\n      .deviceId(audioInputDeviceId)\n      .build();\n    const videoSettings: HMSVideoTrackSettings = new HMSVideoTrackSettingsBuilder()\n      .codec(video.codec)\n      .maxBitrate(video.bitRate)\n      .maxFramerate(video.frameRate)\n      .setWidth(video.width)\n      .setHeight(video.height)\n      .deviceId(videoDeviceId)\n      .build();\n\n    if (canPublishAudio || canPublishVideo) {\n      this.transport\n        ?.getLocalTracks(\n          new HMSTrackSettingsBuilder()\n            .video(canPublishVideo ? videoSettings : null)\n            .audio(canPublishAudio ? audioSettings : null)\n            .build(),\n        )\n        .then(async (hmsTracks) => {\n          hmsTracks.forEach(async (hmsTrack) => {\n            switch (hmsTrack.type) {\n              case HMSTrackType.AUDIO:\n                this.localPeer!.audioTrack = hmsTrack;\n                break;\n\n              case HMSTrackType.VIDEO:\n                this.localPeer!.videoTrack = hmsTrack;\n                break;\n            }\n            await this.transport!.publish([hmsTrack]);\n\n            if (isAudioMuted && this.localPeer?.audioTrack) {\n              await this.localPeer.audioTrack.setEnabled(false);\n            }\n            if (isVideoMuted && this.localPeer?.videoTrack) {\n              await this.localPeer.videoTrack.setEnabled(false);\n            }\n            this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, hmsTrack, this.localPeer!);\n          });\n          this.published = true;\n        });\n    }\n  }\n\n  createRoom() {\n    const hmsPeerList = this.getPeers();\n    this.hmsRoom = new HMSRoom(this.localPeer!.peerId, '', hmsPeerList);\n    return this.hmsRoom;\n  }\n}\n","import { HMSAction } from '../error/HMSAction';\nimport { BuildGetMediaError } from '../error/HMSErrorFactory';\n\nexport async function getLocalStream(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err, HMSAction.GetLocalStream);\n  }\n}\n\nexport async function getLocalScreen(constraints: MediaStreamConstraints['video']): Promise<MediaStream> {\n  try {\n    // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n    const stream = await navigator.mediaDevices.getDisplayMedia({ video: constraints, audio: false });\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err, HMSAction.GetLocalScreen);\n  }\n}\n\ninterface MediaDeviceGroups {\n  audioinput: MediaDeviceInfo[];\n  audiooutput: MediaDeviceInfo[];\n  videoinput: MediaDeviceInfo[];\n}\n\nexport async function getLocalDevices(): Promise<MediaDeviceGroups> {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const deviceGroups: MediaDeviceGroups = {\n      audioinput: [],\n      audiooutput: [],\n      videoinput: [],\n    };\n    devices.forEach((device) => deviceGroups[device.kind].push(device));\n    return deviceGroups;\n  } catch (err) {\n    throw BuildGetMediaError(err, HMSAction.GetLocalDevices);\n  }\n}\n"],"names":["undefined","HMSAnalyticsLevel","HMSLogLevel","HMSLogger","v","tag","data","log","VERBOSE","d","DEBUG","i","INFO","w","WARN","e","ERROR","level","valueOf","console","debug","info","warn","error","TAG","HMSConnection","role","signal","Array","addTransceiver","track","init","nativeConnection","createOffer","options","offer","JSON","stringify","createAnswer","answer","setLocalDescription","description","setRemoteDescription","addIceCandidate","candidate","getSenders","removeTrack","sender","setMaxBitrate","maxBitrate","find","s","id","trackId","params","getParameters","encodings","setParameters","close","remoteDescription","HMSConnectionRole","RENEGOTIATION_CALLBACK_ID","API_DATA_CHANNEL","HMSPublishConnection","config","observer","transport","Publish","RTCPeerConnection","createDataChannel","protocol","onicecandidate","trickle","oniceconnectionstatechange","onIceConnectionChange","iceConnectionState","initAfterJoin","onnegotiationneeded","onRenegotiationNeeded","trackUpdate","HMSMediaStream","nativeStream","HMSSimulcastLayer","HMSRemoteStream","connection","HIGH","setAudio","enabled","audio","syncWithApiChannel","setVideo","layer","video","streamId","framerate","frameRate","apiChannel","send","HMSDataChannel","nativeChannel","metadata","onmessage","onMessage","onopen","msgQueue","length","forEach","msg","message","readyState","push","label","HMSTrack","stream","source","nativeTrack","getMediaTrackSettings","getSettings","setEnabled","value","HMSTrackType","HMSAudioTrack","AUDIO","kind","Error","HMSRemoteAudioTrack","HMSVideoTrack","VIDEO","addSink","videoElement","srcObject","MediaStream","removeSink","HMSRemoteVideoTrack","NONE","preferLayer","HMSSubscribeConnection","Subscribe","Map","initNativeConnectionCallbacks","ondatachannel","channel","_apiChannel","onApiChannelMessage","ontrack","streams","remoteStreams","has","remote","set","onremovetrack","toRemoveTrackIdx","tracks","findIndex","toRemoveTrack","onTrackRemove","splice","get","TrackCls","onTrackAdd","InitService","fetchInitConfig","token","initEndpoint","region","url","fetch","response","json","HMSAction","HMSErrors","GenericConnect","code","messageTemplate","requiresAction","requiresErrorInfo","MissingToken","InvalidTokenFormat","TokenMissingRoomId","NetworkUnavailable","TokenNotAuthorised","InvalidEndpointUrl","EndpointUnreachable","ConnectionLost","GenericStream","NothingToReturn","CodecChangeNotPermitted","PublishSettingsCantBeChanged","CantAccessCaptureDevice","DeviceNotAvailable","DeviceInUse","GenericJoin","UnkownRoom","AlreadyJoined","RoomParticipantLimitReached","GenericAction","NotInTheRoom","InvalidServerResponse","PeerConnectionFailed","UnpublishCalledBeforePublish","NotConnected","Signalling","Unknown","NotReady","HMSExceptionBuilder","codeMessage","cm","action","_action","toString","errorInfo","_errorInfo","from","includes","build","hmsErrorEntry","Object","entries","errorEntry","title","replace","HMSException","setPrototypeOf","prototype","name","JsonRpcSignal","call","method","uuid","socket","Promise","resolve","reject","callbacks","parse","notify","open","uri","WebSocket","openHandler","removeEventListener","addEventListener","reason","onFailure","event","onMessageHandler","p","join","disableVidAutoSub","isJoinCompleted","pendingTrickle","target","desc","fromEntries","version","broadcast","recordStart","recordEnd","leave","analytics","text","hasOwnProperty","cb","result","ex","onNotification","onOffer","onTrickle","HMSVideoCodec","HMSAudioCodec","HMSAudioTrackSettingsBuilder","OPUS","googEchoCancellation","exact","googExperimentalEchoCancellation","autoGainControl","noiseSuppression","googHighpassFilter","googAudioMirroring","volume","_volume","codec","_codec","_maxBitrate","deviceId","_deviceId","advanced","_advanced","HMSAudioTrackSettings","toConstraints","BuildGetMediaError","err","toLowerCase","getAudioTrack","settings","navigator","mediaDevices","getUserMedia","getAudioTracks","SwitchDevice","getVideoTrack","getVideoTracks","getEmptyVideoTrack","prevTrack","width","height","canvas","assign","document","createElement","getContext","fillRect","captureStream","emptyTrack","generateHasPropertyChanged","newSettings","oldSettings","hasChanged","prop","HMSLocalAudioTrack","replaceTrackWith","withTrack","replaceTrack","stop","setSettings","hasPropertyChanged","applyConstraints","HMSVideoTrackSettingsBuilder","VP8","setWidth","_width","setHeight","_height","maxFramerate","_maxFramerate","HMSVideoTrackSettings","HMSLocalVideoTrack","replaceTrackWithBlank","HMSLocalStream","setConnection","getLocalScreen","constraints","getDisplayMedia","GetLocalScreen","local","getLocalTracks","transceiver","direction","sendEncodings","setPreferredCodec","addTrack","removeSender","removedSenderCount","toRemoveLocalTrackIdx","indexOf","HMSNotificationMethod","getNotificationMethod","PEER_JOIN","PEER_LEAVE","PEER_LIST","TRACK_METADATA_ADD","TRACK_UPDATE","ACTIVE_SPEAKERS","BROADCAST","ROLE_CHANGE","UNSUPPORTED","HMSMessageType","getMessageType","type","CHAT","Message","receiver","time","Date","Speaker","peerId","audioLevel","SpeakerList","speakerList","speakers","map","speaker","peer_id","track_id","TrackState","mute","stream_id","Peer","userId","user_id","values","PeerList","peers","peer","getNotification","TransportState","HMSTransport","Disconnected","jsep","subscribeConnection","candidates","publishConnection","exception","signalObserver","callback","promise","newState","handleIceConnectionFailure","state","Failed","authToken","customData","autoSubscribeVideo","Join","endpoint","rtcConfiguration","publishConnectionObserver","subscribeConnectionObserver","publishTrack","extra","then","unpublishTrack","Unpublish","publish","unpublish","sendMessage","currentTrackStates","originalTrackState","trackState","newTrackState","HMSRoomUpdate","HMSPeerUpdate","HMSTrackUpdate","decodeJWT","parts","split","payloadStr","atob","payload","roomId","room_id","isLocal","customerDescription","NotificationManager","tracksToProcess","processPendingTracks","trackStateEntry","trackStateMap","hmsPeer","hmsPeerList","audioTrack","screenShareTrackIndex","auxiliaryTracks","videoTrack","dispatchEvent","CustomEvent","detail","listener","onTrackUpdate","TRACK_REMOVED","trackEntry","currentTrackStateInfo","trackInfo","getPeerTrackByTrackId","TRACK_MUTED","TRACK_UNMUTED","TRACK_DESCRIPTION_CHANGED","clear","localPeer","peerList","handlePeerJoin","handleNotification","notification","audioListener","handlePeerLeave","handlePeerList","handleTrackMetadataAdd","handleTrackUpdate","handleRoleChange","handleActiveSpeakers","tracksCopy","TRACK_ADDED","onAudioLevelUpdate","dominantSpeaker","dominantSpeakerPeer","findPeerByPeerId","onPeerUpdate","BECAME_DOMINANT_SPEAKER","RESIGNED_DOMINANT_SPEAKER","EventTarget","HMSTrackSettingsBuilder","_video","_audio","simulcast","_simulcast","HMSTrackSettings","Room","SILENT_AUDIO_URL","HMSAudioSinkManager","notificationManager","elementId","audioEl","autoplay","style","display","audioSink","append","getElementById","remove","userElement","audioSinkParent","body","addSilentAudio","handleTrackAdd","handleTrackRemove","cleanUp","silentAudio","src","HMSSdk","OFF","onNotificationHandled","handleOnTrackAdd","handleOnTrackRemove","onError","publishParams","audioSinkManager","audioSinkElementId","uuidv4","userName","metaData","autoVideoSubscribe","published","onJoin","createRoom","hmsRoom","getLocalPeer","getPeers","remotePeers","x","hmsMessage","startScreenShare","onStop","screen","bitRate","onended","stopEndedScreenshare","stopScreenShare","t","addAudioListener","PEER_JOINED","PEER_LEFT","onMessageReceived","isAudioMuted","isVideoMuted","audioInputDeviceId","videoDeviceId","allowed","canPublishAudio","canPublishVideo","audioSettings","videoSettings","hmsTracks","hmsTrack","HMSRoom","getLocalStream","GetLocalStream","getLocalDevices","enumerateDevices","devices","deviceGroups","audioinput","audiooutput","videoinput","device","GetLocalDevices"],"mappings":"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"}