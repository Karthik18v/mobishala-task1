import HMSConfig from '../interfaces/config';
import HMSInterface, { HMSAnalyticsLevel } from '../interfaces/hms';
import HMSPeer from '../interfaces/hms-peer';
import HMSTransport from '../transport';
import HMSUpdateListener, { HMSAudioListener } from '../interfaces/update-listener';
import { HMSLogLevel } from '../utils/logger';
import HMSRoom from './models/HMSRoom';
import Message from './models/HMSMessage';
export declare class HMSSdk implements HMSInterface {
    logLevel: HMSLogLevel;
    analyticsLevel: HMSAnalyticsLevel;
    transport: HMSTransport | null;
    roomId: string | null;
    localPeer: HMSPeer | null;
    private TAG;
    private notificationManager;
    private listener;
    private audioListener;
    private audioSinkManager;
    private hmsRoom?;
    private published;
    private publishParams;
    private observer;
    join(config: HMSConfig, listener: HMSUpdateListener): void;
    private cleanUp;
    leave(): Promise<void>;
    getLocalPeer(): HMSPeer;
    getPeers(): HMSPeer[];
    sendMessage(type: string, message: string, receiver?: string): Message;
    startScreenShare(onStop: () => void): Promise<void>;
    private stopEndedScreenshare;
    stopScreenShare(): Promise<void>;
    addAudioListener(audioListener: HMSAudioListener): void;
    private onNotificationHandled;
    private publish;
    createRoom(): HMSRoom;
}
